{"version":3,"sources":["D:/workspaces/editable-data-table/docs/PaginationEditableTableDemo.tsx","D:/workspaces/editable-data-table/docs/pagination-editable-table.mdx","D:/workspaces/editable-data-table/src/index.ts"],"names":["CusDatePicker","_ref","value","onChange","react_default","a","createElement","build","event","date","validate","data","result","title","PaginationEditableDataTableDemo","_useRestPageApi","useRestPageApi","items","pagination","fetch","asyncRemove","remove","update","query","_useSimpleEditingList","useSimpleEditingList","alwaysEditing","editingRows","setItems","useEffect","handleRemove","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","row","wrap","_context","prev","next","id","stop","_x","apply","this","arguments","debounceUpdate","useMemo","debounce","handleOnRowChange","_ref3","_callee2","index","rowData","validateResult","_context2","keys","length","_x2","_x3","Fragment","forms_build","onSubmit","name","Button","type","raised","src","onRowChange","order","editor","TextInput","render","_value","autoWidth","onClick","Pagination","pageSize","total","totalElements","currentPage","pageNo","pageNumber","layoutProps","MDXLayout","MDXContent","components","props","objectWithoutProperties","index_es","assign","mdxType","parentName","href","className","index_esm","__position","__code","__scope","Playground","Props","PaginationEditableTableDemo","isMDXComponent","_EditableDataTable__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_TableColumn__WEBPACK_IMPORTED_MODULE_1__","d","__webpack_exports__","_shared_EditorProps__WEBPACK_IMPORTED_MODULE_2__","_shared_EditorProps__WEBPACK_IMPORTED_MODULE_2___default","n","_useEditingList__WEBPACK_IMPORTED_MODULE_3__","_useSimpleEditingList__WEBPACK_IMPORTED_MODULE_4__","EditableDataTable"],"mappings":"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","file":"static/js/docs-pagination-editable-table.215fb09c.js","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useEffect, useMemo } from 'react';\nimport useRestPageApi from '@sinoui/use-rest-page-api';\nimport Pagination from 'sinoui-components/Pagination';\nimport TextInput from 'sinoui-components/TextInput';\nimport Button from 'sinoui-components/Button';\nimport DatePicker from '@sinoui/datepicker';\nimport debounce from 'lodash/debounce';\nimport Form, {\n  FormItem,\n  Label,\n  TextInput as TextInputField,\n} from '@sinoui/forms';\nimport EditableDataTable, { TableColumn, useSimpleEditingList } from '../src';\n\ninterface Data {\n  id: string;\n  title?: string;\n  duty?: string;\n  birthday: string;\n}\n\nfunction CusDatePicker({\n  value,\n  onChange,\n}: {\n  value: string;\n  onChange: (value?: string) => void;\n}) {\n  return (\n    <DatePicker value={value} onChange={(event, date) => onChange(date)} />\n  );\n}\n\nfunction validate(data: Data) {\n  const result: any = {};\n\n  if (!data.title) {\n    result.title = '姓名不能为空';\n  }\n  return result;\n}\n\nfunction PaginationEditableDataTableDemo() {\n  const {\n    items,\n    pagination,\n    fetch,\n    remove: asyncRemove,\n    update,\n    query,\n  } = useRestPageApi<Data>('/api/pagination-demo', []);\n  const { editingRows, setItems, items: data } = useSimpleEditingList<Data>(\n    items,\n    {\n      alwaysEditing: true,\n      validate,\n    },\n  );\n\n  useEffect(() => {\n    setItems(items);\n  }, [items, setItems]);\n\n  const handleOnChange = (pageNumber: number, pageSize: number) => {\n    fetch(pageNumber - 1, pageSize);\n  };\n\n  const handleRemove = async (row: Data) => {\n    await asyncRemove(row.id);\n  };\n\n  const debounceUpdate = useMemo(() => debounce(update, 200), [update]);\n\n  const handleOnRowChange = async (index: number, rowData: Data) => {\n    const validateResult = validate(rowData);\n    if (!validateResult || Object.keys(validateResult).length === 0) {\n      await debounceUpdate(rowData, false);\n    }\n  };\n\n  return (\n    <>\n      <Form onSubmit={query as any}>\n        <FormItem>\n          <Label>姓名</Label>\n          <TextInputField name=\"title\" />\n        </FormItem>\n        <Button type=\"submit\" raised>\n          查询\n        </Button>\n      </Form>\n      <EditableDataTable\n        data={data}\n        editingRows={editingRows}\n        validate={validate}\n        onRowChange={handleOnRowChange}\n      >\n        <TableColumn title=\"序号\" order />\n        <TableColumn title=\"标题\" name=\"title\" editor={TextInput} />\n        <TableColumn title=\"出生日期\" name=\"birthday\" editor={CusDatePicker} />\n        <TableColumn title=\"职务\" name=\"duty\" editor={TextInput} />\n        <TableColumn\n          title=\"操作\"\n          name=\"id\"\n          render={(_value, row) => (\n            <>\n              <Button autoWidth onClick={() => handleRemove(row)}>\n                删除\n              </Button>\n            </>\n          )}\n        />\n      </EditableDataTable>\n      <Pagination\n        pageSize={pagination.pageSize}\n        total={pagination.totalElements}\n        currentPage={pagination.pageNo + 1}\n        onChange={handleOnChange}\n      />\n    </>\n  );\n}\n\nexport default PaginationEditableDataTableDemo;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport PaginationEditableTableDemo from './PaginationEditableTableDemo';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"分页加载数据的可编辑数据表格\"\n    }}>{`分页加载数据的可编辑数据表格`}</h1>\n    <p>{`可编辑数据表格可以与分页数据加载相结合，实现分页加载数据的可编辑数据表格。本章节会结合：`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/sinoui/use-rest-page-api\"\n        }}>{`@sinoui/use-rest-page-api`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://47.93.34.153:10080/sinoui/sinoui/tree/master/packages/sinoui-components/Pagination\"\n        }}>{`sinoui-components/Pagination`}</a></li>\n    </ul>\n    <p>{`实现分页加载数据的可编辑数据表格。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React, { useEffect, useMemo } from 'react';\nimport useRestPageApi from '@sinoui/use-rest-page-api';\nimport Pagination from 'sinoui-components/Pagination';\nimport TextInput from 'sinoui-components/TextInput';\nimport Button from 'sinoui-components/Button';\nimport DatePicker from '@sinoui/datepicker';\nimport debounce from 'lodash/debounce';\nimport Form, {\n  FormItem,\n  Label,\n  TextInput as TextInputField,\n} from '@sinoui/forms';\nimport EditableDataTable, { TableColumn, useSimpleEditingList } from '../src';\n\ninterface Data {\n  id: string;\n  title?: string;\n  duty?: string;\n  birthday: string;\n}\n\nfunction CusDatePicker({\n  value,\n  onChange,\n}: {\n  value: string;\n  onChange: (value?: string) => void;\n}) {\n  return (\n    <DatePicker value={value} onChange={(event, date) => onChange(date)} />\n  );\n}\n\nfunction validate(data: Data) {\n  const result: any = {};\n\n  if (!data.title) {\n    result.title = '姓名不能为空';\n  }\n  return result;\n}\n\nfunction PaginationEditableDataTableDemo() {\n  const {\n    items,\n    pagination,\n    fetch,\n    remove: asyncRemove,\n    update,\n    query,\n  } = useRestPageApi<Data>('/api/pagination-demo', []);\n  const { editingRows, setItems, items: data } = useSimpleEditingList<Data>(\n    items,\n    {\n      alwaysEditing: true,\n      validate,\n    },\n  );\n\n  useEffect(() => {\n    setItems(items);\n  }, [items, setItems]);\n\n  const handleOnChange = (pageNumber: number, pageSize: number) => {\n    fetch(pageNumber - 1, pageSize);\n  };\n\n  const handleRemove = async (row: Data) => {\n    await asyncRemove(row.id);\n  };\n\n  const debounceUpdate = useMemo(() => debounce(update, 200), [update]);\n\n  const handleOnRowChange = async (index: number, rowData: Data) => {\n    const validateResult = validate(rowData);\n    if (!validateResult || Object.keys(validateResult).length === 0) {\n      await debounceUpdate(rowData, false);\n    }\n  };\n\n  return (\n    <>\n      <Form onSubmit={query as any}>\n        <FormItem>\n          <Label>姓名</Label>\n          <TextInputField name=\"title\" />\n        </FormItem>\n        <Button type=\"submit\" raised>\n          查询\n        </Button>\n      </Form>\n      <EditableDataTable\n        data={data}\n        editingRows={editingRows}\n        validate={validate}\n        onRowChange={handleOnRowChange}\n      >\n        <TableColumn title=\"序号\" order />\n        <TableColumn title=\"标题\" name=\"title\" editor={TextInput} />\n        <TableColumn title=\"出生日期\" name=\"birthday\" editor={CusDatePicker} />\n        <TableColumn title=\"职务\" name=\"duty\" editor={TextInput} />\n        <TableColumn\n          title=\"操作\"\n          name=\"id\"\n          render={(_value, row) => (\n            <>\n              <Button autoWidth onClick={() => handleRemove(row)}>\n                删除\n              </Button>\n            </>\n          )}\n        />\n      </EditableDataTable>\n      <Pagination\n        pageSize={pagination.pageSize}\n        total={pagination.totalElements}\n        currentPage={pagination.pageNo + 1}\n        onChange={handleOnChange}\n      />\n    </>\n  );\n}\n\nexport default PaginationEditableDataTableDemo;\n`}</code></pre>\n    <p>{`示例：`}</p>\n    <Playground __position={0} __code={'<PaginationEditableTableDemo />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      PaginationEditableTableDemo\n    }} mdxType=\"Playground\">\n  <PaginationEditableTableDemo mdxType=\"PaginationEditableTableDemo\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"与查询的结合\"\n    }}>{`与查询的结合`}</h2>\n    <p><inlineCode parentName=\"p\">{`useRestPageApi.query(searechParams)`}</inlineCode>{`是用来查询的方法。`}</p>\n    <p>{`如：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<SearchForm onSubmit={dataSource.query}>\n  <SearchFormItem>\n    <Label>标题</Label>\n    <TextInput name=\"title\" />\n  </SearchFormItem>\n</SearchForm>\n`}</code></pre>\n    <p>{`再如：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<SearchFormState onSubmit={dataSource.query}>\n  <SearchFormItem>\n    <Label>标题</Label>\n    <TextInput name=\"title\" />\n  </SearchFormItem>\n</SearchFormState>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"输入框值变更自动保存\"\n    }}>{`输入框值变更自动保存`}</h2>\n    <p><inlineCode parentName=\"p\">{`useRestPageApi.update(rowData)`}</inlineCode>{`是用来更新数据的方法。可以使用`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.lodashjs.com/docs/latest#_debouncefunc-wait0-options\"\n      }}>{`lodash/debounce`}</a>{`降低保存的频率。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const debounceUpdate = useMemo(() => debounce(update, 200), [update]);\n\nconst handleOnRowChange = async (index: number, rowData: Data) => {\n  const validateResult = validate(rowData);\n  if (!validateResult || Object.keys(validateResult).length === 0) {\n    await debounceUpdate(rowData, false);\n  }\n};\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import EditableDataTable, {\n  Props as EditableDataTableProps,\n} from './EditableDataTable';\nimport TableColumn, { Props as TableColumnProps } from './TableColumn';\nimport EditorProps from './shared/EditorProps';\nimport useEditingList from './useEditingList';\nimport useSimpleEditingList from './useSimpleEditingList';\n\nexport default EditableDataTable;\n\nexport {\n  EditableDataTableProps,\n  TableColumn,\n  TableColumnProps,\n  EditorProps,\n  useEditingList,\n  useSimpleEditingList,\n};\n"],"sourceRoot":""}