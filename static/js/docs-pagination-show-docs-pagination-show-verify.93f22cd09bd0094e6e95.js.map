{"version":3,"sources":["E:/study/editable-data-table/docs/pagination-show-docs/pagination-show-verify.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","E_study_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"2YAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,gBADR,gBAGAL,OAAAE,EAAA,EAAAF,CAAA,kEAAgBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,qBAAhB,oDACAN,OAAAE,EAAA,EAAAF,CAAA,uGACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,iBADZ,6KAYLP,OAAAE,EAAA,EAAAF,CAAA,8BAAUA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,YAAV,qBAAqEN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,qBAArE,UACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,iBADZ,gDAILP,OAAAE,EAAA,EAAAF,CAAA,kHAAwBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,YAAxB,wIACAN,OAAAE,EAAA,EAAAF,CAAA,6JACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,iBADZ,gaAmBTX,EAAWY,gBAAiB","file":"static/js/docs-pagination-show-docs-pagination-show-verify.64b8685b.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"校验\"\n    }}>{`校验`}</h1>\n    <p>{`在这个场景中，使用`}<inlineCode parentName=\"p\">{`EditableDataTable`}</inlineCode>{`内置的校验即可。`}</p>\n    <p>{`首先定义一下数据行的校验方法：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`function validate(rowData) {\n  const errors: { [x: string]: string } = {};\n\n  if (!rowData.title) {\n    errors.title = '必填';\n  }\n\n  return errors;\n}\n`}</code></pre>\n    <p>{`然后将`}<inlineCode parentName=\"p\">{`validate`}</inlineCode>{`传递给`}<inlineCode parentName=\"p\">{`EditableDataTable`}</inlineCode>{`：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<EditableDataTable validate={validate} />\n`}</code></pre>\n    <p>{`到这一步，修改编辑器的值，就会调用`}<inlineCode parentName=\"p\">{`validate`}</inlineCode>{`方法校验数据是否有问题，这就是“实时校验”。`}</p>\n    <p>{`最后，调整保存方法，先校验数据，然后再保存数据：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Button\n  autoWidth\n  onClick={() => {\n    if (!context.validate()) {\n      alert('数据填写不完整');\n    } else {\n      save();\n    }\n  }}\n>\n  保存\n</Button>\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}