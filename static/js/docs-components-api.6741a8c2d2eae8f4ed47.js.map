{"version":3,"sources":["/Users/sinosoft/Documents/GitHub/editable-data-table/docs/components-api.mdx","/Users/sinosoft/Documents/GitHub/editable-data-table/src/Table.tsx","/Users/sinosoft/Documents/GitHub/editable-data-table/src/EmptyDataTableRow.tsx","/Users/sinosoft/Documents/GitHub/editable-data-table/src/DataTableColGroup.tsx","/Users/sinosoft/Documents/GitHub/editable-data-table/src/DataTableHead.tsx","/Users/sinosoft/Documents/GitHub/editable-data-table/src/DataTableBodyRow.tsx","/Users/sinosoft/Documents/GitHub/editable-data-table/src/DataTableBody.tsx","/Users/sinosoft/Documents/GitHub/editable-data-table/src/EditableDataTable.tsx","/Users/sinosoft/Documents/GitHub/editable-data-table/src/DataTableCellEditor.tsx","/Users/sinosoft/Documents/GitHub/editable-data-table/src/DataTableBodyCell.tsx","/Users/sinosoft/Documents/GitHub/editable-data-table/src/DataTableHeadCell.tsx","/Users/sinosoft/Documents/GitHub/editable-data-table/src/TableColumn.tsx","/Users/sinosoft/Documents/GitHub/editable-data-table/src/shared/DataTableRowContext.ts","/Users/sinosoft/Documents/GitHub/editable-data-table/src/shared/EditableDataTableContext.ts","/Users/sinosoft/Documents/GitHub/editable-data-table/src/shared/EditingBodyRowContainer.ts","/Users/sinosoft/Documents/GitHub/editable-data-table/src/shared/constants.ts","/Users/sinosoft/Documents/GitHub/editable-data-table/src/useSimpleEditingList.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_sinosoft_Documents_GitHub_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","of","EditableDataTable","TableColumn","className","align","href","isMDXComponent","captionTypeStyle","css","_templateObject","theme","typography","body1","fontSize","fontFamily","fontWeightMedium","color","bodyTypeStyle","_templateObject2","fontWeight","dataTableCellStyle","_templateObject3","palette","type","rowBgColor","light","tableRowSelected","tableRowHover","dark","StyledTable","styled","Table","_templateObject4","primary","caption","Wrapper","div","EmptyDataTableRow_templateObject","EmptyDataTableRow","children","react_default","a","createElement","data-testid","context","RowType","ColGroup","DataTableColGroup","DataTableRowContext","Provider","value","DataTableHead","React","memo","data","index","editing","error","touched","useMemo","Body","EditingBodyRowContainer","DataTableBody","idPropertyName","_ref$editingRows","editingRows","errors","length","map","item","src_DataTableBodyRow","key","concat","undefined","_props$data","_props$idPropertyName","_props$emptyTitle","emptyTitle","style","_ref$idPropertyName","onRowChange","validate","onFieldChange","options","useRef","useEffect","current","useEditableDataTable","Fragment","src_Table","classNames","EditableDataTableContext","src_DataTableColGroup","src_DataTableHead","src_DataTableBody","src_EmptyDataTableRow","name","Editor","editor","useContext","valueFromContext","_useState","useState","setValue","slicedToArray","_EditingBodyRowContai","useContainer","validateField","errorControlled","handleChange","useCallback","event","newValue","target","isChangeEvent","onChange","FormHelpText","MemoDataTableBodyCellInner","order","render","Error","src_DataTableCellEditor","DataTableBodyCell","state","DataTableHeadCell","title","align_center","width","Head","src_DataTableHeadCell","src_DataTableBodyCell","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_constants__WEBPACK_IMPORTED_MODULE_1__","createContext","createContainer","rowData","outerError","outTouched","_useState2","_Users_sinosoft_Documents_GitHub_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setTouched","_useState3","_useState4","setErrors","rowDataRef","_useContext","updateErrors","newErrors","prev","shallowEqual","newRowData","arguments","updateTouched","result","newTouched","keys","forEach","filter","fieldName","_Users_sinosoft_Documents_GitHub_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_sinosoft_Documents_GitHub_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","d","__webpack_exports__","useSimpleEditingList","defaultItems","_Users_sinosoft_Documents_GitHub_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","items","setItems","Array","fill","alwaysEditing","setEditingRows","_useState5","_useState6","_useState7","_useState8","optionsRef","edit","rowIndex","produce","draft","setReadonly","replaceItems","newItems","add","addAt","push","splice","remove","removeByIndex","removeItems","indexes","removeByIndexes","array","_","indexOf","updateItem","rowErrors","validateAllEditingRows","_item","fieldError","fieldTouched","field","every"],"mappings":"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","file":"static/js/docs-components-api.2aded892.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport TableColumn from '../src/TableColumn';\nimport EditableDataTable from '../src/EditableDataTable';\nimport useSimpleEditingList from '../src/useSimpleEditingList';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"组件-api\"\n    }}>{`组件 API`}</h1>\n    <p>{`包括两个核心的组件和一个自定义 hook：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`EditableDataTable - 可编辑数据表格组件`}</li>\n      <li parentName=\"ul\">{`TableColumn - 定义数据表格列的组件`}</li>\n      <li parentName=\"ul\">{`useEditingList - 可编辑表格数据的状态管理 hook（与后端 API 交互，不包括校验状态）`}</li>\n      <li parentName=\"ul\">{`useSimpleEditingList - 可编辑表格数据的状态管理 hook （不与后端交互，但包括校验状态）`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"editabledatatable010\"\n    }}>{`EditableDataTable(0.1.0)`}</h2>\n    <Props of={EditableDataTable} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"tablecolumn010\"\n    }}>{`TableColumn(0.1.0)`}</h2>\n    <Props of={TableColumn} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"useeditinglist（030）\"\n    }}>{`useEditingList（0.3.0）`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`可编辑表格数据的状态管理 hook。`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`useEditingList<T>(url:string,defaultValue:T[],options?:Options<T>):Response<T>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"参数配置\"\n    }}>{`参数配置`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数名称`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`url`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`与后端交互时的 url`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`T[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认列表数据`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`状态管理所需配置项`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`其中，`}<inlineCode parentName=\"p\">{`options`}</inlineCode>{`具体配置可参考`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/sinoui/use-rest-list-api#options\"\n      }}>{`use-rest-list-api 的 options`}</a>{`。`}</p>\n    <h3 {...{\n      \"id\": \"返回值的数据结构\"\n    }}>{`返回值的数据结构`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`返回值名称`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`items`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`T[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`列表数据`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`editingRows`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`处于编辑状态的行。`}<inlineCode parentName=\"td\">{`editingRows`}</inlineCode>{`数组需要与`}<inlineCode parentName=\"td\">{`data`}</inlineCode>{`数组保持一一对应的关系，`}<inlineCode parentName=\"td\">{`editingRows`}</inlineCode>{`数组中每一个数据项代表的是`}<inlineCode parentName=\"td\">{`data`}</inlineCode>{`数组中对应数据项的编辑状态，`}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`表示编辑状态，`}<inlineCode parentName=\"td\">{`false`}</inlineCode>{`表示非编辑状态。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`add`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(item: Partial<T> = {}, index: number = -1)=>void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`新增一条可编辑的空数据。`}<inlineCode parentName=\"td\">{`index`}</inlineCode>{`默认为-1，表示在末尾添加数据，`}<inlineCode parentName=\"td\">{`index`}</inlineCode>{`等于 0 时，表示在开始位置添加数据。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`remove`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(row:T,index:number)=>void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`删除一条数据`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`edit`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(index:number)=>void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`更新一条数据的编辑状态`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`save`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(row:T,index:number)=>void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`新增一条数据或者更新一条数据`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`idPropertyName`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`数据的 id 属性名。`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"使用方式\"\n    }}>{`使用方式`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { useEditingList } from '@sinouiincubator/editable-data-table';\n\nfunction Demo() {\n  const { items, add, remove } = useEditingList('/tests', []);\n\n  return null;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usesimpleeditinglist020\"\n    }}>{`useSimpleEditingList(0.2.0)`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`可编辑表格数据的状态管理 hook （不与后端交互，但包括校验状态）。`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`useSimpleEditingList(defaultValue:T[],options:Options):editingList\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"参数配置-1\"\n    }}>{`参数配置`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数名称`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`T[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`列表数据默认值`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`配置项`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options.alwaysEditing`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`如果为`}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`，则表示所有数据行处于编辑状态。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options.validate`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(item: T) => ErrorResult `}{`|`}{`undefined`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`验证行数据的函数`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"返回值editinglist数据结构\"\n    }}>{`返回值`}<inlineCode parentName=\"h3\">{`editingList`}</inlineCode>{`数据结构`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`返回值名称`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`items`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`T[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`列表数据`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setItems`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(newItems: T[]) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`设置列表数据`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`editingRows`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`数据行的编辑状态`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`edit`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(rowIndex: number) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`设置数据行处于编辑状态`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setReadonly`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(rowIndex: number) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`设置数据行处于只读状态`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`add`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(item: Partial<T> = {}, index: number = -1)=>void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`新增一条可编辑的空数据。`}<inlineCode parentName=\"td\">{`index`}</inlineCode>{`默认为-1，表示在末尾添加数据，`}<inlineCode parentName=\"td\">{`index`}</inlineCode>{`等于 0 时，表示在开始位置添加数据。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`remove`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(index: number) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`删除数据行`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`removeItems`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(indexes: number[]) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`删除一组数据行`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`updateItem`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(index: number, item: T) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`更新数据行`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`errors`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[fieldName: string]`}{`: string[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`校验错误`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`touched`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[fieldName: string]`}{`: boolean[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`编辑器被点击状态`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validateField`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(index: number, fieldName: string, rowData: T) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`校验单个数据行`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validateAllEditingRows`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`() => boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`校验所有编辑器中的行`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"使用方式-1\"\n    }}>{`使用方式`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { useSimpleEditingList } from '@sinouiincubator/editable-data-table';\n\nfunction Demo() {\n  const editingList = useSimpleEditingList([], { alwaysEditing: true });\n  return null;\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import styled, { css } from 'sinoui-components/styles';\nimport Table from 'sinoui-components/Table';\n\nconst captionTypeStyle = css`\n  font-size: ${(props) => props.theme.typography.body1.fontSize}rem;\n  font-family: ${(props) => props.theme.typography.fontFamily};\n  font-weight: ${(props) => props.theme.typography.fontWeightMedium};\n  color: ${(props) => props.theme.typography.body1.color};\n`;\n\nconst bodyTypeStyle = css`\n  font-size: ${(props) => props.theme.typography.body1.fontSize}rem;\n  font-family: ${(props) => props.theme.typography.fontFamily};\n  font-weight: ${(props) => props.theme.typography.body1.fontWeight};\n  color: ${(props) => props.theme.typography.body1.color};\n`;\n\nconst dataTableCellStyle = css`\n  padding: 0;\n  padding-left: 8px;\n  padding-right: 8px;\n  border-bottom: 1px solid\n    ${(props) =>\n      props.theme.palette.type === 'light'\n        ? 'rgba(224, 224, 224, 1)'\n        : 'rgba(80, 80, 80, 1)'};\n`;\n\nconst rowBgColor = {\n  light: {\n    tableRowSelected: 'rgba(0, 0, 0, 0.04)', // 表格行选中时的背景色\n    tableRowHover: 'rgba(0, 0, 0, 0.07)', // 表格行hover时的背景色\n  },\n  dark: {\n    tableRowSelected: 'rgba(255, 255, 255, 0.08)', // 表格行选中时的背景色\n    tableRowHover: 'rgba(255, 255, 255, 0.14)', // 表格行hover时的背景色\n  },\n};\n\nconst StyledTable = styled(Table)`\n  table-layout: fixed;\n  border-top: 1px solid rgba(224, 224, 224, 1);\n  & .sinoui-data-table-head {\n    ${captionTypeStyle};\n    ${dataTableCellStyle};\n    background-color: ${(props) =>\n      props.theme.palette.type === 'light'\n        ? props.theme.palette.primary[50]\n        : props.theme.palette.primary[200]};\n    text-align: left;\n    vertical-align: middle;\n  }\n\n  .sinoui-checkbox-button {\n    margin: 14px;\n  }\n\n  & .sinoui-data-table-head.numeric,\n  .sinoui-data-table-body-td.numeric {\n    text-align: right;\n    flex-direction: row-reverse;\n  }\n\n  & .sinoui-data-table-head.align_center,\n  .sinoui-data-table-body-td.align_center {\n    text-align: center;\n  }\n\n  & .sinoui-data-table-head.checkbox,\n  .sinoui-data-table-body-td.checkbox {\n    padding: 0;\n    width: 48px;\n  }\n\n  & .sinoui-data-table-head.extraInfo,\n  .sinoui-data-table-body-td.extraInfo {\n    padding: 0;\n    width: 60px;\n  }\n\n  & .sinoui-data-table-head:last-child,\n  .sinoui-data-table-body-td:last-child {\n    padding-right: 24px;\n  }\n\n  & .sinoui-data-table-footer {\n    ${captionTypeStyle};\n    ${dataTableCellStyle};\n    padding-left: 24px;\n    padding-right: 12px;\n  }\n\n  & .sinoui-data-table-body-cell-no-data {\n    ${bodyTypeStyle};\n    ${dataTableCellStyle};\n    padding: 64px;\n    text-align: center;\n    color: ${(props) => props.theme.typography.caption.color};\n  }\n\n  & .sinoui-data-table-body-td {\n    ${bodyTypeStyle};\n    ${dataTableCellStyle};\n    text-align: left;\n    vertical-align: middle;\n    word-wrap: break-word;\n    word-break: break-all;\n  }\n\n  & .sinoui-data-table-head-row {\n    height: 48px;\n  }\n\n  & .sinoui-data-table-footer-row,\n  .sinoui-data-table-body-row-no-data {\n    height: 56px;\n    background-color: transparent;\n  }\n\n  & .sinoui-data-table-body-row {\n    height: 48px;\n    background-color: transparent;\n\n    &:hover {\n      background-color: ${(props) =>\n        rowBgColor[props.theme.palette.type].tableRowHover};\n    }\n  }\n\n  & .sinoui-data-table-body-row.selected {\n    background-color: ${(props) =>\n      rowBgColor[props.theme.palette.type].tableRowSelected};\n  }\n`;\n\nexport default StyledTable;\n","import React from 'react';\nimport styled from 'sinoui-components/styles';\n\nconst Wrapper = styled.div`\n  text-align: center;\n  padding: 32px 8px;\n`;\n\n/**\n * 表格空数据时显示的行\n */\nconst EmptyDataTableRow: React.SFC = (props) => {\n  const { children } = props;\n  return (\n    <Wrapper className=\"sinoui-data-table-info\" data-testid=\"emptyInfo\">\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default EmptyDataTableRow;\n","import React from 'react';\nimport { RowType } from './shared/constants';\nimport DataTableRowContext from './shared/DataTableRowContext';\n\nconst context: { type: RowType.ColGroup } = {\n  type: RowType.ColGroup,\n};\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction DataTableColGroup(props: Props) {\n  const { children } = props;\n  return (\n    <DataTableRowContext.Provider value={context}>\n      <colgroup data-testid=\"colgroup\">{children}</colgroup>\n    </DataTableRowContext.Provider>\n  );\n}\n\nexport default DataTableColGroup;\n","import React from 'react';\n\n/**\n * 数据表头\n */\nconst DataTableHead: React.SFC = function TableHead({ children }) {\n  return (\n    <thead>\n      <tr className=\"sinoui-data-table-head-row\" data-testid=\"tableHead\">\n        {children}\n      </tr>\n    </thead>\n  );\n};\n\nexport default DataTableHead;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useMemo } from 'react';\nimport { RowType } from './shared/constants';\nimport DataTableRowContext, {\n  BodyRowContextType,\n} from './shared/DataTableRowContext';\nimport EditingBodyRowContainer from './shared/EditingBodyRowContainer';\n\ninterface Props<T> {\n  /**\n   * 此行数据\n   */\n  data: T;\n  /**\n   * 数据序号\n   */\n  index: number;\n  /**\n   * 单元格子组件\n   */\n  children: React.ReactNode;\n\n  /**\n   * 是否处于编辑状态\n   */\n  editing?: boolean;\n\n  /**\n   * 行数据错误状态\n   */\n  error?: ErrorResult;\n\n  /**\n   * 单元格编辑器是否被点击过\n   */\n  touched?: TouchedState;\n}\n\ntype CompType<T = any> = React.SFC<Props<T>>;\n\n/**\n * 内容行\n */\nconst DataTableBodyRow: CompType = (props) => {\n  const { data, index, children, editing, error, touched } = props;\n  const context: BodyRowContextType<any> = useMemo(\n    () => ({\n      type: RowType.Body,\n      data,\n      index,\n      editing: !!editing,\n      error,\n      touched,\n    }),\n    [data, index, editing, error, touched],\n  );\n\n  return (\n    <DataTableRowContext.Provider value={context}>\n      <EditingBodyRowContainer.Provider>\n        <tr className=\"sinoui-data-table-body-row\" data-testid=\"bodyRow\">\n          {children}\n        </tr>\n      </EditingBodyRowContainer.Provider>\n    </DataTableRowContext.Provider>\n  );\n};\n\nexport default React.memo(DataTableBodyRow);\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport DataTableBodyRow from './DataTableBodyRow';\n\n/**\n * 数据表格内容组件\n */\nconst DataTableBody: React.SFC<{\n  data?: any[];\n  idPropertyName: string;\n  editingRows?: boolean[];\n  errors?: ErrorResult[];\n  touched?: TouchedState[];\n}> = function DataTableBody({\n  idPropertyName,\n  data,\n  children,\n  editingRows = [],\n  errors,\n  touched,\n}) {\n  if (!data || data.length === 0) {\n    return null;\n  }\n  return (\n    <tbody>\n      {data.map((item, index) => (\n        <DataTableBodyRow\n          key={item[idPropertyName] || `index_${index}`}\n          data={item}\n          index={index}\n          data-testid=\"tableBody\"\n          editing={editingRows[index]}\n          error={errors ? errors[index] : undefined}\n          touched={touched ? touched[index] : undefined}\n        >\n          {children}\n        </DataTableBodyRow>\n      ))}\n    </tbody>\n  );\n};\n\nexport default DataTableBody;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useMemo, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Table from './Table';\nimport EditableDataTableContext from './shared/EditableDataTableContext';\nimport EmptyDataTableRow from './EmptyDataTableRow';\nimport DataTableColGroup from './DataTableColGroup';\nimport DataTableHead from './DataTableHead';\nimport DataTableBody from './DataTableBody';\n\nexport interface Props<T> {\n  /**\n   * 列表数据\n   */\n  data?: T[];\n  /**\n   * 处于编辑状态的行。`editingRows`数组需要与`data`数组保持一一对应的关系，`editingRows`数组中每一个数据项代表的是`data`数组中对应数据项的编辑状态，`true`表示编辑状态，`false`表示非编辑状态。\n   */\n  editingRows?: boolean[];\n\n  /**\n   * 给table元素添加className\n   */\n  className?: string;\n\n  /**\n   * 给table元素添加样式\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * 错误状态\n   */\n  errors?: ErrorResult[];\n\n  /**\n   * 单元格是否被点击的状态\n   */\n  touched?: TouchedState[];\n\n  /**\n   * 子节点，一组TableColumn。使用TableColumn指表格列信息。\n   */\n  children: React.ReactNode;\n  /**\n   * 数据的id属性名。默认为'id'。\n   */\n  idPropertyName?: string;\n  /**\n   * 无数据时的提示信息。默认为“暂无数据”。\n   */\n  emptyTitle?: React.ReactNode;\n\n  /**\n   * 监听行数据发生变化的事件。回调函数的`rowData`参数代表的是变更后的行数据对象。\n   */\n  onRowChange?: (index: number, rowData: T) => void;\n\n  /**\n   * 监听单元格值变化事件。回调函数的`rowData`参数代表的是变更后的行数据对象。\n   */\n  onFieldChange?: (index: number, fieldName: string, rowData: T) => void;\n\n  /**\n   * 给正在编辑的行添加校验规则。\n   * \n   * 返回错误提示：\n   * \n   * ```js\n     {\n       'title': '不能为空',\n       'name': '不能少于三个字'\n     }\n   * ```\n   *\n   * 上面的错误信息表示字段`title`和`name`校验失败。\n   * \n   * 如果数据行没有错误，则返回`{}`或者`undefined`。\n   */\n  validate?: (rowData: T) => { [x: string]: string } | undefined;\n}\n\nfunction useEditableDataTable<T>({\n  idPropertyName = 'id',\n  onRowChange,\n  validate,\n  onFieldChange,\n}: Props<T>) {\n  const options = useRef({\n    onRowChange,\n    validate,\n    onFieldChange,\n  });\n\n  useEffect(() => {\n    options.current.onRowChange = onRowChange;\n    options.current.validate = validate;\n    options.current.onFieldChange = onFieldChange;\n  }, [onRowChange, validate, onFieldChange]);\n\n  const context = useMemo(\n    () => ({ idPropertyName, options: options.current }),\n    [idPropertyName],\n  );\n\n  return context;\n}\n\n/**\n * 可编辑表格\n */\nfunction EditableDataTable<T>(props: Props<T>) {\n  const {\n    data = [],\n    idPropertyName = 'id',\n    children,\n    emptyTitle = '暂无数据',\n    editingRows,\n    errors,\n    touched,\n    className,\n    style,\n  } = props;\n  const context = useEditableDataTable(props);\n  return (\n    <>\n      <Table\n        className={classNames('sinoui-editable-data-table', className)}\n        style={style}\n      >\n        <EditableDataTableContext.Provider value={context}>\n          <DataTableColGroup>{children}</DataTableColGroup>\n          <DataTableHead>{children}</DataTableHead>\n          <DataTableBody\n            data={data}\n            idPropertyName={idPropertyName}\n            editingRows={editingRows}\n            errors={errors}\n            touched={touched}\n          >\n            {children}\n          </DataTableBody>\n        </EditableDataTableContext.Provider>\n      </Table>\n      {(!data || data.length === 0) && (\n        <EmptyDataTableRow>{emptyTitle}</EmptyDataTableRow>\n      )}\n    </>\n  );\n}\n\nexport default EditableDataTable;\n","import React, { useState, useContext, useCallback, useMemo } from 'react';\nimport FormHelpText from 'sinoui-components/Form/FormHelpText';\nimport DataTableRowContext, {\n  BodyRowContextType,\n} from './shared/DataTableRowContext';\nimport EditableDataTableContext from './shared/EditableDataTableContext';\nimport EditingBodyRowContainer from './shared/EditingBodyRowContainer';\n\ninterface Props {\n  editor: React.ReactType;\n  name: string;\n}\n\nfunction isChangeEvent(\n  event?: React.ChangeEvent<HTMLInputElement> | string,\n): event is React.ChangeEvent<HTMLInputElement> {\n  return !!(event && (event as React.ChangeEvent<HTMLInputElement>).target);\n}\n\n/**\n * 单元格编辑器\n */\nfunction DataTableCellEditor(props: Props) {\n  const { name, editor: Editor } = props;\n  const { data, index } = useContext(DataTableRowContext) as BodyRowContextType<\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    any\n  >;\n  const valueFromContext = data[name] || '';\n  const [, setValue] = useState(valueFromContext);\n  const { options } = useContext(EditableDataTableContext);\n  const {\n    touched,\n    errors,\n    validateField,\n    errorControlled,\n  } = EditingBodyRowContainer.useContainer();\n\n  const handleChange = useCallback(\n    (event?: React.ChangeEvent<HTMLInputElement> | string) => {\n      const newValue = isChangeEvent(event) ? event.target.value : event;\n      setValue(newValue);\n\n      data[name] = newValue;\n\n      if (options.onRowChange) {\n        options.onRowChange(index, data);\n      }\n\n      if (options.onFieldChange) {\n        options.onFieldChange(index, name, data);\n      }\n\n      if (!errorControlled) {\n        validateField(name, data);\n      }\n    },\n    [data, name, options, index, errorControlled, validateField],\n  );\n\n  const isTouched = touched[name];\n  const error = isTouched ? errors[name] : undefined;\n\n  const element = useMemo(\n    () => (\n      <>\n        <Editor\n          name={name}\n          value={valueFromContext}\n          item={data}\n          onChange={handleChange}\n          error={!!error}\n        />\n        {error && (\n          <FormHelpText\n            error\n            className=\"sinoui-editable-data-table-editor-error\"\n          >\n            {error}\n          </FormHelpText>\n        )}\n      </>\n    ),\n    [data, error, handleChange, name, valueFromContext],\n  );\n\n  return element;\n}\n\nexport default React.memo(DataTableCellEditor);\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useContext } from 'react';\nimport EditableDataTableContext from './shared/EditableDataTableContext';\nimport DataTableRowContext, {\n  BodyRowContextType,\n} from './shared/DataTableRowContext';\nimport DataTableCellEditor from './DataTableCellEditor';\nimport EditingBodyRowContainer from './shared/EditingBodyRowContainer';\n\ninterface CellState<T> {\n  data: T;\n  index: number;\n  editing: boolean;\n  errors?: { [x: string]: any };\n  validate: (rowData?: T) => boolean;\n  idPropertyName: string;\n}\n\ninterface DataCellProps<T, CellDataType> {\n  /**\n   * 是否显示序号\n   */\n  order?: boolean;\n  /**\n   * 渲染单元格\n   */\n  render?: (\n    value: CellDataType,\n    row: T,\n    index: number,\n    id: string,\n    context: {\n      editing: boolean;\n      validate: (rowData?: any) => boolean;\n    },\n  ) => React.ReactNode;\n  /**\n   * 数据列名称\n   */\n  name?: string;\n\n  /**\n   * 编辑器\n   */\n  editor?: React.ReactType;\n}\n\nfunction useCellState<T>(): CellState<T> {\n  const { data, index, editing } = useContext(\n    DataTableRowContext,\n  ) as BodyRowContextType<any>;\n  const { validate } = EditingBodyRowContainer.useContainer();\n  const { idPropertyName } = useContext(EditableDataTableContext);\n\n  return {\n    data,\n    index,\n    editing,\n    idPropertyName,\n    validate,\n  };\n}\n\n/**\n * 数据单元格\n */\nfunction DataTableBodyCellInner(\n  props: DataCellProps<any, any> & CellState<any>,\n) {\n  const {\n    order,\n    render,\n    name,\n    editor,\n    index,\n    editing,\n    data,\n    idPropertyName,\n    validate,\n  } = props;\n\n  if (order) {\n    return (\n      <td className=\"sinoui-data-table-body-td align_center\">{index + 1}</td>\n    );\n  }\n\n  if (editing && editor) {\n    if (!name) {\n      throw new Error(`没有给TableColumn指定name属性`);\n    }\n    return (\n      <td className=\"sinoui-data-table-body-td\">\n        <DataTableCellEditor name={name} editor={editor} />\n      </td>\n    );\n  }\n\n  if (render) {\n    return (\n      <td className=\"sinoui-data-table-body-td\">\n        {render(\n          name ? data[name] : undefined,\n          data,\n          index,\n          data[idPropertyName],\n          {\n            editing,\n            validate,\n          },\n        )}\n      </td>\n    );\n  }\n\n  return name ? (\n    <td className=\"sinoui-data-table-body-td\">{data[name]}</td>\n  ) : null;\n}\n\nconst MemoDataTableBodyCellInner = React.memo(DataTableBodyCellInner);\n\nfunction DataTableBodyCell<T = any, CellDataType = string>(\n  props: DataCellProps<T, CellDataType>,\n) {\n  const state = useCellState<any>();\n\n  return <MemoDataTableBodyCellInner {...props} {...state} />;\n}\n\nexport default DataTableBodyCell;\n","import React from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  order?: boolean;\n  title?: React.ReactNode;\n}\n\n/**\n * 表格头单元格\n */\nfunction DataTableHeadCell(props: Props) {\n  const { order, title } = props;\n  return (\n    <th\n      className={classNames('sinoui-data-table-head', {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        align_center: order,\n      })}\n    >\n      {title}\n    </th>\n  );\n}\n\nexport default DataTableHeadCell;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useContext } from 'react';\nimport DataTableRowContext from './shared/DataTableRowContext';\nimport DataTableBodyCell from './DataTableBodyCell';\nimport DataTableHeadCell from './DataTableHeadCell';\nimport { RowType } from './shared/constants';\n\nexport interface Props<T, CellDataType> {\n  /**\n   * 数据列名称\n   */\n  name?: string;\n  /**\n   * 标题\n   */\n  title?: React.ReactNode;\n\n  /**\n   * 是否显示序号\n   */\n  order?: boolean;\n\n  /**\n   * 渲染单元格\n   */\n  render?: (\n    value: CellDataType,\n    row: T,\n    index: number,\n    id: string,\n    context: {\n      editing: boolean;\n      validate: (rowData?: any) => boolean;\n    },\n  ) => React.ReactNode;\n\n  /**\n   * 列宽度\n   */\n  width?: number | string;\n\n  /**\n   * 编辑器\n   */\n  editor?: React.ReactType;\n}\n\n/**\n * 表格列\n */\nconst TableColumn: React.SFC<Props<any, any>> = React.memo(function TableColumn<\n  T,\n  CellDataType\n>(props: Props<T, CellDataType>) {\n  const { title, order, width } = props;\n  const { type } = useContext(DataTableRowContext);\n\n  switch (type) {\n    case RowType.Head:\n      return <DataTableHeadCell title={title} order={order} />;\n    case RowType.ColGroup:\n      return <col width={order ? 50 : width} />;\n    default:\n      return <DataTableBodyCell {...props} />;\n  }\n});\n\nexport default TableColumn;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport { RowType } from './constants';\n\nexport interface BodyRowContextType<T> {\n  type: RowType.Body;\n  data: T;\n  index: number;\n  /**\n   * 是否处于编辑状态\n   */\n  editing: boolean;\n\n  /**\n   * 数据行的验证结果\n   */\n  error?: ErrorResult;\n\n  /**\n   * 单元格数据被点击状态\n   */\n  touched?: TouchedState;\n}\n\nexport interface HeadRowContextType {\n  type: RowType.Head;\n}\n\nexport interface ColGroupContextType {\n  type: RowType.ColGroup;\n}\n\nexport type RowContextType<T = any> =\n  | BodyRowContextType<T>\n  | HeadRowContextType\n  | ColGroupContextType;\n\nconst DataTableRowContext = React.createContext<RowContextType>({\n  type: RowType.Head,\n});\n\nexport default DataTableRowContext;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\n\ninterface ContextType {\n  idPropertyName: string;\n  options: {\n    onRowChange?: (index: number, rowData: any) => void;\n    onFieldChange?: (index: number, fieldName: string, rowData: any) => void;\n    validate?: (rowData: any) => { [x: string]: string } | undefined;\n  };\n}\n\nconst EditableDataTableContext = React.createContext<ContextType>({\n  idPropertyName: 'id',\n  options: {},\n});\n\nexport default EditableDataTableContext;\n","import { useState, useCallback, useRef, useEffect, useContext } from 'react';\nimport { createContainer } from 'unstated-next';\nimport shallowEqual from 'shallowequal';\nimport EditableDataTableContext from './EditableDataTableContext';\nimport DataTableRowContext, { BodyRowContextType } from './DataTableRowContext';\n\ninterface ContextType<T> {\n  /**\n   * 校验错误信息\n   */\n  errors: {\n    [x: string]: string;\n  };\n\n  /**\n   * 表单校验状态是否是受控于外部。（也就是使用者处理数据行校验）\n   */\n  errorControlled: boolean;\n\n  /**\n   * 点击状态\n   */\n  touched: {\n    [x: string]: boolean;\n  };\n\n  /**\n   * 校验数据行\n   *\n   * 如果通过校验，则返回`true`，否则返回`false`。\n   */\n  validate: (newItem?: T) => boolean;\n\n  /**\n   * 校验表单域\n   */\n  validateField: (fieldName: string, newRowData: T) => void;\n}\n\n/**\n * 用于正在编辑的行数据的状态管理hook\n *\n * 主要维护的状态：\n *\n * * 表单校验\n * * 是否点击过的状态\n *\n */\nfunction useEditingBodyRow<T>(): ContextType<T> {\n  const { data: rowData, error: outerError, touched: outTouched } = useContext(\n    DataTableRowContext,\n  ) as BodyRowContextType<T>;\n  const [touched, setTouched] = useState<{ [x: string]: boolean }>({});\n  const [errors, setErrors] = useState({});\n  const rowDataRef = useRef(rowData);\n  const { options, idPropertyName } = useContext(EditableDataTableContext);\n\n  useEffect(() => {\n    rowDataRef.current = rowData;\n  }, [rowData]);\n\n  const updateErrors = useCallback((newErrors: any) => {\n    setErrors((prev) => {\n      if (!shallowEqual(newErrors, prev)) {\n        return newErrors;\n      }\n      return prev;\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!(rowData as any)[idPropertyName] && options.validate) {\n      const newErrors = options.validate(rowData) || {};\n      updateErrors(newErrors);\n    }\n  }, [rowData, options, idPropertyName, updateErrors]);\n\n  const validate = useCallback(\n    (newRowData: T = rowDataRef.current, updateTouched: boolean = true) => {\n      if (options.validate) {\n        const result = options.validate(newRowData);\n        if (result) {\n          if (updateTouched) {\n            const newTouched: { [x: string]: boolean } = {};\n            Object.keys(result).forEach((key) => {\n              newTouched[key] = true;\n            });\n\n            setTouched(newTouched);\n          }\n\n          updateErrors(result || {});\n\n          return (\n            Object.keys(result).filter((key) => !!result[key]).length === 0\n          );\n        }\n      }\n\n      return true;\n    },\n    [options, updateErrors],\n  );\n\n  const validateField = useCallback(\n    (fieldName: string, newRowData: T) => {\n      setTouched((prev) => {\n        if (!prev[fieldName]) {\n          return { ...prev, [fieldName]: true };\n        }\n        return prev;\n      });\n      validate(newRowData, false);\n    },\n    [validate],\n  );\n\n  return {\n    errors: outerError || errors,\n    errorControlled: !!outerError,\n    touched: outTouched || touched,\n    validate,\n    validateField,\n  };\n}\n\nconst EditingBodyRowContainer = createContainer(useEditingBodyRow);\n\nexport default EditingBodyRowContainer;\n","export enum RowType {\n  Body,\n  Head,\n  ColGroup,\n}\n\nexport const EMPTY_ROW_INFO = '暂无数据';\n","import { useRef, useEffect, useState, useCallback } from 'react';\nimport { produce } from 'immer';\nimport shallowEqual from 'shallowequal';\n\ninterface Options<T> {\n  /**\n   * 单元格表单域是否一直处于编辑状态。\n   */\n  alwaysEditing?: boolean;\n\n  /**\n   * 验证行数据的函数\n   */\n  validate?: (item: T) => ErrorResult | undefined;\n}\n\n/**\n * 可编辑列表外置状态管理hook\n *\n * 支持：\n *\n * * 列表数据管理\n * * 可编辑状态维护\n * * 单元格编辑器校验\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useSimpleEditingList<T = any>(\n  defaultItems: T[] = [],\n  options: Options<T> = {},\n): SimpleEditingListResult<T> {\n  const [items, setItems] = useState<T[]>(defaultItems);\n  const [editingRows, setEditingRows] = useState<boolean[]>(() =>\n    new Array(defaultItems.length).fill(!!options.alwaysEditing),\n  );\n  const [errors, setErrors] = useState<ErrorResult[]>(() =>\n    new Array(defaultItems.length).fill({}),\n  );\n  const [touched, setTouched] = useState<TouchedState[]>(() =>\n    new Array(defaultItems.length).fill({}),\n  );\n  const optionsRef = useRef(options);\n\n  useEffect(() => {\n    optionsRef.current = options;\n  }, [options]);\n\n  /**\n   * 编辑\n   */\n  const edit = useCallback((rowIndex: number) => {\n    setEditingRows(\n      produce((draft) => {\n        draft[rowIndex] = true;\n      }),\n    );\n  }, []);\n\n  /**\n   * 设置为只读状态\n   */\n  const setReadonly = useCallback((rowIndex: number) => {\n    setEditingRows(\n      produce((draft) => {\n        draft[rowIndex] = false;\n      }),\n    );\n  }, []);\n\n  /**\n   * 更换items\n   *\n   * @param {T[]} newItems 新的items\n   */\n  const replaceItems = useCallback((newItems: T[]) => {\n    setItems(newItems);\n    setEditingRows(\n      new Array(newItems.length).fill(!!optionsRef.current.alwaysEditing),\n    );\n\n    setErrors(new Array(newItems.length).fill({}));\n    setTouched(new Array(newItems.length).fill({}));\n  }, []);\n\n  /**\n   * 新增一条数据\n   */\n  const add = useCallback((item: Partial<T> = {}, index: number = -1) => {\n    const addAt = produce(<V>(draft: V[], value: V) => {\n      if (index === -1 || index >= draft.length) {\n        draft.push(value);\n      } else {\n        draft.splice(index, 0, value);\n      }\n    });\n    setItems((prev) => addAt(prev, item));\n\n    setEditingRows((prev) => addAt(prev, true));\n\n    setErrors((prev) => addAt(prev, {}));\n\n    setTouched((prev) => addAt(prev, {}));\n  }, []);\n\n  /**\n   * 删除数据\n   */\n  const remove = useCallback((index: number) => {\n    const removeByIndex = produce((draft) => {\n      draft.splice(index, 1);\n    });\n\n    setItems(removeByIndex);\n    setEditingRows(removeByIndex);\n    setErrors(removeByIndex);\n    setTouched(removeByIndex);\n  }, []);\n\n  /**\n   * 删除一组数据\n   */\n  const removeItems = useCallback((indexes: number[]) => {\n    const removeByIndexes = <T>(array: T[]) =>\n      array.filter((_, index) => indexes.indexOf(index) === -1);\n    setItems(removeByIndexes);\n    setEditingRows(removeByIndexes);\n    setErrors(removeByIndexes);\n    setTouched(removeByIndexes);\n  }, []);\n\n  /**\n   * 更新数据项\n   */\n  const updateItem = useCallback((index: number, item: T) => {\n    setItems(\n      produce((draft) => {\n        draft[index] = item;\n      }),\n    );\n  }, []);\n\n  /**\n   * 验证一个单元格\n   */\n  const validateField = useCallback(\n    (index: number, fieldName: string, rowData: T) => {\n      const { validate } = optionsRef.current;\n\n      if (validate) {\n        const rowErrors = validate(rowData) || {};\n\n        setErrors(\n          produce((draft) => {\n            if (!shallowEqual(draft[index], rowErrors)) {\n              draft[index] = rowErrors;\n            }\n          }),\n        );\n\n        setTouched(\n          produce((draft) => {\n            draft[index][fieldName] = true;\n          }),\n        );\n      }\n    },\n    [],\n  );\n\n  /**\n   * 校验列表中正在编辑的数据\n   */\n  const validateAllEditingRows = () => {\n    const { validate } = optionsRef.current;\n\n    if (!validate) {\n      return true;\n    }\n\n    const updateErrors = produce((draft: ErrorResult[]) => {\n      items\n        .map((item, index) => {\n          if (!editingRows[index]) {\n            return {};\n          }\n          return validate(item) || {};\n        })\n        .forEach((error, index) => {\n          if (!shallowEqual(draft[index], error)) {\n            draft[index] = error;\n          }\n        });\n    });\n\n    const newErrors = updateErrors(errors);\n    setErrors(newErrors);\n    setTouched(\n      produce((draft) => {\n        items.forEach((_item, index) => {\n          if (!editingRows[index]) {\n            return;\n          }\n\n          const fieldError = newErrors[index];\n          const fieldTouched: TouchedState = {};\n\n          Object.keys(fieldError).forEach((field) => {\n            fieldTouched[field] = true;\n          });\n\n          draft[index] = fieldTouched;\n        });\n      }),\n    );\n\n    return (\n      newErrors &&\n      newErrors.every(\n        (error) =>\n          Object.keys(error).filter((key) => !!error[key]).length === 0,\n      )\n    );\n  };\n\n  return {\n    items,\n    setItems: replaceItems,\n    editingRows,\n    edit,\n    setReadonly,\n    add,\n    remove,\n    removeItems,\n    updateItem,\n    errors,\n    touched,\n    validateField,\n    validateAllEditingRows,\n  };\n}\n\nexport default useSimpleEditingList;\n"],"sourceRoot":""}