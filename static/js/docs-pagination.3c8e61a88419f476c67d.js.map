{"version":3,"sources":["webpack:///./docs/SelectRow.css?dcab","/Users/sinosoft/Documents/GitHub/editable-data-table/docs/PaginationEditableTableDemo.tsx","/Users/sinosoft/Documents/GitHub/editable-data-table/docs/pagination.mdx","/Users/sinosoft/Documents/GitHub/editable-data-table/docs/SelectRow.css","/Users/sinosoft/Documents/GitHub/editable-data-table/src/RowSelectColumn.tsx","/Users/sinosoft/Documents/GitHub/editable-data-table/src/index.ts","/Users/sinosoft/Documents/GitHub/editable-data-table/src/useEditingList.ts"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","update","locals","exports","hot","accept","newContent","a","b","key","idx","Error","dispose","CusDatePicker","_ref","value","onChange","react_default","createElement","build","event","date","validate","data","result","title","PaginationEditableDataTableDemo","_useRestPageApi","useRestPageApi","items","pagination","fetch","asyncRemove","remove","query","_useSimpleEditingList","useSimpleEditingList","alwaysEditing","editingRows","setItems","selectedRows","isAllSelected","isContainsSelected","toggleAllSelected","toggleRowSelected","useEffect","handleRemove","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","row","wrap","_context","prev","next","id","stop","_x","apply","this","arguments","debounceUpdate","useMemo","debounce","handleOnRowChange","_ref3","_callee2","index","rowData","validateResult","_context2","keys","length","_x2","_x3","handleBatchRemove","_ref4","_callee3","selectedRowIds","_context3","filter","_data","includes","map","item","Fragment","forms_build","onSubmit","Grid","flex","name","Button","type","raised","onClick","src","onRowChange","rowClassName","order","editor","TextInput","render","_value","autoWidth","Pagination","pageSize","total","totalElements","currentPage","pageNo","pageNumber","layoutProps","MDXLayout","MDXContent","components","props","objectWithoutProperties","index_es","assign","mdxType","parentName","href","className","index_esm","__position","__code","__scope","Playground","Props","PaginationEditableTableDemo","isMDXComponent","push","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","sinoui_components_Checkbox__WEBPACK_IMPORTED_MODULE_1__","_TableColumn__WEBPACK_IMPORTED_MODULE_2__","RowSelectColumn","_props$startIndex","startIndex","width","checked","indeterminate","_row","indexOf","_EditableDataTable__WEBPACK_IMPORTED_MODULE_0__","_TableColumn__WEBPACK_IMPORTED_MODULE_1__","d","__webpack_exports__","_shared_EditorProps__WEBPACK_IMPORTED_MODULE_2__","_shared_EditorProps__WEBPACK_IMPORTED_MODULE_2___default","_useEditingList__WEBPACK_IMPORTED_MODULE_3__","_useSimpleEditingList__WEBPACK_IMPORTED_MODULE_4__","_RowSelectColumn__WEBPACK_IMPORTED_MODULE_5__","EditableDataTable","useEditingList","url","defaultValue","_ref$keyName","keyName","_ref$alwaysEditing","_useRestListApi","useRestListApi","originItems","save","isLoading","isError","sortWith","reload","reset","searchParams","sorts","removeEditingItems","updateItem","setReadonly","rest","_Users_sinosoft_Documents_GitHub_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_4__","getItemId","useCallback","_Users_sinosoft_Documents_GitHub_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_Users_sinosoft_Documents_GitHub_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","savedRowIds","Array","isArray","_Users_sinosoft_Documents_GitHub_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","Boolean","_ref5","asyncUpdate","_ref7","newRow","sent","_x4","_Users_sinosoft_Documents_GitHub_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","idPropertyName"],"mappings":"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","file":"static/js/docs-pagination.95051bd6.js","sourcesContent":["\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--12-1!../node_modules/postcss-loader/src/index.js??ref--12-2!./SelectRow.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js??ref--12-1!../node_modules/postcss-loader/src/index.js??ref--12-2!./SelectRow.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--12-1!../node_modules/postcss-loader/src/index.js??ref--12-2!./SelectRow.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useEffect, useMemo } from 'react';\nimport useRestPageApi from '@sinoui/use-rest-page-api';\nimport Pagination from 'sinoui-components/Pagination';\nimport TextInput from 'sinoui-components/TextInput';\nimport Button from 'sinoui-components/Button';\nimport DatePicker from '@sinoui/datepicker';\nimport debounce from 'lodash/debounce';\nimport Form, {\n  FormItem,\n  Label,\n  TextInput as TextInputField,\n} from '@sinoui/forms';\nimport { Row, Column } from 'sinoui-components/Grid';\nimport EditableDataTable, {\n  TableColumn,\n  useSimpleEditingList,\n  RowSelectColumn,\n} from '../src';\nimport './SelectRow.css';\n\ninterface Data {\n  id: string;\n  title?: string;\n  duty?: string;\n  birthday: string;\n}\n\nfunction CusDatePicker({\n  value,\n  onChange,\n}: {\n  value: string;\n  onChange: (value?: string) => void;\n}) {\n  return (\n    <DatePicker value={value} onChange={(event, date) => onChange(date)} />\n  );\n}\n\nfunction validate(data: Data) {\n  const result: any = {};\n\n  if (!data.title) {\n    result.title = '姓名不能为空';\n  }\n  return result;\n}\n\nfunction PaginationEditableDataTableDemo() {\n  const {\n    items,\n    pagination,\n    fetch,\n    remove: asyncRemove,\n    update,\n    query,\n  } = useRestPageApi<Data>('/api/pagination-demo', []);\n  const {\n    editingRows,\n    setItems,\n    items: data,\n    selectedRows,\n    isAllSelected,\n    isContainsSelected,\n    toggleAllSelected,\n    toggleRowSelected,\n  } = useSimpleEditingList<Data>(items, {\n    alwaysEditing: true,\n    validate,\n  });\n\n  useEffect(() => {\n    setItems(items);\n  }, [items, setItems]);\n\n  const handleOnChange = (pageNumber: number, pageSize: number) => {\n    fetch(pageNumber - 1, pageSize);\n  };\n\n  const handleRemove = async (row: Data) => {\n    await asyncRemove(row.id);\n  };\n\n  const debounceUpdate = useMemo(() => debounce(update, 200), [update]);\n\n  const handleOnRowChange = async (index: number, rowData: Data) => {\n    const validateResult = validate(rowData);\n    if (!validateResult || Object.keys(validateResult).length === 0) {\n      await debounceUpdate(rowData, false);\n    }\n  };\n\n  const handleBatchRemove = async () => {\n    const selectedRowIds = data\n      .filter((_data, idx) => selectedRows.includes(idx))\n      .map((item) => item.id);\n\n    await asyncRemove(selectedRowIds);\n  };\n\n  const handleRowClassName = (index: number) => {\n    if (selectedRows.includes(index)) {\n      return 'sinoui-data-table-body-row_selected';\n    }\n\n    return '';\n  };\n\n  return (\n    <>\n      <Form onSubmit={query as any}>\n        <Row>\n          <Column flex={16}>\n            <FormItem>\n              <Label>姓名</Label>\n              <TextInputField name=\"title\" />\n            </FormItem>\n          </Column>\n          <Column flex={8}>\n            <Button type=\"submit\" raised>\n              查询\n            </Button>\n          </Column>\n        </Row>\n      </Form>\n      {selectedRows.length > 0 && (\n        <Row>\n          <Column>\n            <Button onClick={handleBatchRemove}>删除</Button>\n          </Column>\n        </Row>\n      )}\n      <EditableDataTable\n        data={data}\n        editingRows={editingRows}\n        validate={validate}\n        onRowChange={handleOnRowChange}\n        rowClassName={handleRowClassName}\n      >\n        <RowSelectColumn\n          selectedRows={selectedRows}\n          isAllSelected={isAllSelected}\n          isContainsSelected={isContainsSelected}\n          toggleAllSelected={toggleAllSelected}\n          toggleRowSelected={toggleRowSelected}\n        />\n        <TableColumn title=\"序号\" order />\n        <TableColumn title=\"标题\" name=\"title\" editor={TextInput} />\n        <TableColumn title=\"出生日期\" name=\"birthday\" editor={CusDatePicker} />\n        <TableColumn title=\"职务\" name=\"duty\" editor={TextInput} />\n        <TableColumn\n          title=\"操作\"\n          name=\"id\"\n          render={(_value, row) => (\n            <>\n              <Button autoWidth onClick={() => handleRemove(row)}>\n                删除\n              </Button>\n            </>\n          )}\n        />\n      </EditableDataTable>\n      <Pagination\n        pageSize={pagination.pageSize}\n        total={pagination.totalElements}\n        currentPage={pagination.pageNo + 1}\n        onChange={handleOnChange}\n      />\n    </>\n  );\n}\n\nexport default PaginationEditableDataTableDemo;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport PaginationEditableTableDemo from './PaginationEditableTableDemo';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"分页加载数据的可编辑数据表格\"\n    }}>{`分页加载数据的可编辑数据表格`}</h1>\n    <p>{`可编辑数据表格可以与分页数据加载相结合，实现分页加载数据的可编辑数据表格。本章节会结合：`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/sinoui/use-rest-page-api\"\n        }}>{`@sinoui/use-rest-page-api`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://47.93.34.153:10080/sinoui/sinoui/tree/master/packages/sinoui-components/Pagination\"\n        }}>{`sinoui-components/Pagination`}</a></li>\n    </ul>\n    <p>{`实现分页加载数据的可编辑数据表格。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React, { useEffect, useMemo } from 'react';\nimport useRestPageApi from '@sinoui/use-rest-page-api';\nimport Pagination from 'sinoui-components/Pagination';\nimport TextInput from 'sinoui-components/TextInput';\nimport Button from 'sinoui-components/Button';\nimport DatePicker from '@sinoui/datepicker';\nimport debounce from 'lodash/debounce';\nimport Form, {\n  FormItem,\n  Label,\n  TextInput as TextInputField,\n} from '@sinoui/forms';\nimport { Row, Column } from 'sinoui-components/Grid';\nimport EditableDataTable, {\n  TableColumn,\n  useSimpleEditingList,\n  RowSelectColumn,\n} from '../src';\nimport './PaginationEditableTableDemo.css';\n\ninterface Data {\n  id: string;\n  title?: string;\n  duty?: string;\n  birthday: string;\n}\n\nfunction CusDatePicker({\n  value,\n  onChange,\n}: {\n  value: string;\n  onChange: (value?: string) => void;\n}) {\n  return (\n    <DatePicker value={value} onChange={(event, date) => onChange(date)} />\n  );\n}\n\nfunction validate(data: Data) {\n  const result: any = {};\n\n  if (!data.title) {\n    result.title = '姓名不能为空';\n  }\n  return result;\n}\n\nfunction PaginationEditableDataTableDemo() {\n  const {\n    items,\n    pagination,\n    fetch,\n    remove: asyncRemove,\n    update,\n    query,\n  } = useRestPageApi<Data>('/api/pagination-demo', []);\n  const {\n    editingRows,\n    setItems,\n    items: data,\n    selectedRows,\n    isAllSelected,\n    isContainsSelected,\n    toggleAllSelected,\n    toggleRowSelected,\n  } = useSimpleEditingList<Data>(items, {\n    alwaysEditing: true,\n    validate,\n  });\n\n  useEffect(() => {\n    setItems(items);\n  }, [items, setItems]);\n\n  const handleOnChange = (pageNumber: number, pageSize: number) => {\n    fetch(pageNumber - 1, pageSize);\n  };\n\n  const handleRemove = async (row: Data) => {\n    await asyncRemove(row.id);\n  };\n\n  const debounceUpdate = useMemo(() => debounce(update, 200), [update]);\n\n  const handleOnRowChange = async (index: number, rowData: Data) => {\n    const validateResult = validate(rowData);\n    if (!validateResult || Object.keys(validateResult).length === 0) {\n      await debounceUpdate(rowData, false);\n    }\n  };\n\n  const handleBatchRemove = async () => {\n    const selectedRowIds = data\n      .filter((_data, idx) => selectedRows.includes(idx))\n      .map((item) => item.id);\n\n    await asyncRemove(selectedRowIds);\n  };\n\n  const handleRowClassName = (index: number) => {\n    if (selectedRows.includes(index)) {\n      return 'sinoui-data-table-body-row_selected';\n    }\n\n    return '';\n  };\n\n  return (\n    <>\n      <Form onSubmit={query as any}>\n        <Row>\n          <Column flex={16}>\n            <FormItem>\n              <Label>姓名</Label>\n              <TextInputField name=\"title\" />\n            </FormItem>\n          </Column>\n          <Column flex={8}>\n            <Button type=\"submit\" raised>\n              查询\n            </Button>\n          </Column>\n        </Row>\n      </Form>\n      {selectedRows.length > 0 && (\n        <Row>\n          <Column>\n            <Button onClick={handleBatchRemove}>删除</Button>\n          </Column>\n        </Row>\n      )}\n      <EditableDataTable\n        data={data}\n        editingRows={editingRows}\n        validate={validate}\n        onRowChange={handleOnRowChange}\n        rowClassName={handleRowClassName}\n      >\n        <RowSelectColumn\n          selectedRows={selectedRows}\n          isAllSelected={isAllSelected}\n          isContainsSelected={isContainsSelected}\n          toggleAllSelected={toggleAllSelected}\n          toggleRowSelected={toggleRowSelected}\n        />\n        <TableColumn title=\"序号\" order />\n        <TableColumn title=\"标题\" name=\"title\" editor={TextInput} />\n        <TableColumn title=\"出生日期\" name=\"birthday\" editor={CusDatePicker} />\n        <TableColumn title=\"职务\" name=\"duty\" editor={TextInput} />\n        <TableColumn\n          title=\"操作\"\n          name=\"id\"\n          render={(_value, row) => (\n            <>\n              <Button autoWidth onClick={() => handleRemove(row)}>\n                删除\n              </Button>\n            </>\n          )}\n        />\n      </EditableDataTable>\n      <Pagination\n        pageSize={pagination.pageSize}\n        total={pagination.totalElements}\n        currentPage={pagination.pageNo + 1}\n        onChange={handleOnChange}\n      />\n    </>\n  );\n}\n`}</code></pre>\n    <p>{`示例：`}</p>\n    <Playground __position={0} __code={'<PaginationEditableTableDemo />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      PaginationEditableTableDemo\n    }} mdxType=\"Playground\">\n  <PaginationEditableTableDemo mdxType=\"PaginationEditableTableDemo\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"与查询的结合\"\n    }}>{`与查询的结合`}</h2>\n    <p><inlineCode parentName=\"p\">{`useRestPageApi.query(searechParams)`}</inlineCode>{`是用来查询的方法，可以在查询表单提交时调用这个方法，完成查询事宜。`}</p>\n    <p>{`举一个与某内部项目查询表单组件的组合，完成表格数据查询的功能。`}</p>\n    <p>{`例子 1：`}<inlineCode parentName=\"p\">{`SearchForm`}</inlineCode>{`是查询表单组件，`}<inlineCode parentName=\"p\">{`SearchButton`}</inlineCode>{`是查询按钮。点击查询按钮，查询表单会发出提交（submit）事件。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const dataSource = useRestPageApi('url');\n\n<SearchForm onSubmit={dataSource.query}>\n  <SearchFormItem>\n    <Label>标题</Label>\n    <TextInput name=\"title\" />\n  </SearchFormItem>\n  <SearchButton />\n</SearchForm>;\n`}</code></pre>\n    <p>{`例子 2：`}<inlineCode parentName=\"p\">{`SearchFormState`}</inlineCode>{`是用来切换简单和复杂查询表单的组件，`}<inlineCode parentName=\"p\">{`advancedForm`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`simpleForm`}</inlineCode>{`两个属性分别用来指定复杂和查询表单。它有`}<inlineCode parentName=\"p\">{`onSubmit`}</inlineCode>{`属性，在查询表单的查询按钮被点击时，调用相对应的回调函数。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const dataSource = useRestPageApi('url');\n\n<SearchFormState\n  onSubmit={dataSource.query}\n  advancedForm={AdvancedSearchForm}\n  simpleForm={SimpleSearchForm}\n/>;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"输入框值变更自动保存\"\n    }}>{`输入框值变更自动保存`}</h2>\n    <p><inlineCode parentName=\"p\">{`useRestPageApi.update(rowData)`}</inlineCode>{`是用来更新数据的方法。可以使用`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.lodashjs.com/docs/latest#_debouncefunc-wait0-options\"\n      }}>{`lodash/debounce`}</a>{`降低保存的频率。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const debounceUpdate = useMemo(() => debounce(update, 200), [update]);\n\nconst handleRowChange = async (index: number, rowData: Data) => {\n  const validateResult = validate(rowData);\n  if (!validateResult || Object.keys(validateResult).length === 0) {\n    await debounceUpdate(rowData, false);\n  }\n};\n\n<EditableDataTable onRowChange={handleRowChange} />;\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  ","exports = module.exports = require(\"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".sinoui-editable-data-table .sinoui-data-table-body-row_selected {\\n  background-color: rgba(0, 0, 0, 0.12);\\n}\\n\", \"\"]);\n","import React from 'react';\nimport Checkbox from 'sinoui-components/Checkbox';\nimport TableColumn from './TableColumn';\n\ninterface Props {\n  /**\n   * 选中行\n   */\n  selectedRows: number[];\n  /**\n   * 是否全选\n   */\n  isAllSelected: boolean;\n  /**\n   * 是否选中部分\n   */\n  isContainsSelected: boolean;\n  /**\n   * 全选时的回调函数\n   */\n  toggleAllSelected: () => void;\n  /**\n   * 选中一行时的回调函数\n   */\n  toggleRowSelected: (index: number) => void;\n  startIndex?: number;\n}\n\nfunction RowSelectColumn(props: Props) {\n  const {\n    isAllSelected,\n    isContainsSelected,\n    toggleAllSelected,\n    selectedRows,\n    toggleRowSelected,\n    startIndex = 0,\n  } = props;\n\n  return (\n    <TableColumn\n      width={50}\n      title={\n        <Checkbox\n          checked={isAllSelected}\n          indeterminate={!isAllSelected && isContainsSelected}\n          onChange={toggleAllSelected}\n        />\n      }\n      render={(_value, _row, index) => (\n        <Checkbox\n          checked={selectedRows.indexOf(index + startIndex) !== -1}\n          onChange={() => toggleRowSelected(index + startIndex)}\n        />\n      )}\n    />\n  );\n}\n\nexport default RowSelectColumn;\n","import EditableDataTable, {\n  Props as EditableDataTableProps,\n} from './EditableDataTable';\nimport TableColumn, { Props as TableColumnProps } from './TableColumn';\nimport EditorProps from './shared/EditorProps';\nimport useEditingList from './useEditingList';\nimport useSimpleEditingList from './useSimpleEditingList';\nimport RowSelectColumn from './RowSelectColumn';\n\nexport default EditableDataTable;\n\nexport {\n  EditableDataTableProps,\n  TableColumn,\n  TableColumnProps,\n  EditorProps,\n  useEditingList,\n  useSimpleEditingList,\n  RowSelectColumn,\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport useRestListApi, { Options } from '@sinoui/use-rest-list-api';\nimport { useEffect, useCallback } from 'react';\nimport useSimpleEditingList, {\n  SimpleEditingListOptions,\n} from './useSimpleEditingList';\n\n/**\n * 维护可编辑列表的hook\n */\nexport default function useEditingList<T>(\n  url: string,\n  defaultValue: T[] = [],\n  options?: Options<T> & SimpleEditingListOptions<T>,\n) {\n  const { keyName = 'id', alwaysEditing = false } = options || {};\n  const {\n    items: originItems,\n    remove,\n    update,\n    save,\n    isLoading,\n    isError,\n    query,\n    fetch,\n    sortWith,\n    reload,\n    reset,\n    searchParams,\n    sorts,\n  } = useRestListApi<T>(url, defaultValue, options);\n  const {\n    setItems,\n    remove: removeEditingItems,\n    updateItem,\n    setReadonly,\n    ...rest\n  } = useSimpleEditingList(originItems, options);\n\n  useEffect(() => {\n    setItems(originItems);\n  }, [setItems, originItems]);\n\n  const getItemId = useCallback((item: any) => item[keyName], [keyName]);\n  /**\n   * 删除数据行\n   *\n   * @param row 数据行对象或者一组数据行与索引的数组\n   * @param index 数据行所在的索引位置\n   */\n  const asyncRemove = useCallback(\n    async (row: T | [T, number][], index?: number) => {\n      if (Array.isArray(row)) {\n        const savedRowIds = row\n          .map(([item]) => getItemId(item))\n          .filter(Boolean);\n        if (savedRowIds.length > 0) {\n          await remove(savedRowIds, false);\n        }\n      } else if (getItemId(row)) {\n        await remove(getItemId(row), false);\n      }\n\n      removeEditingItems(\n        Array.isArray(row) ? row.map(([, idx]) => idx) : (index as number),\n      );\n    },\n    [remove, removeEditingItems, getItemId],\n  );\n\n  /**\n   * 更新数据行\n   *\n   * @param row 数据行对象\n   * @param index 数据行所在位置\n   */\n  const asyncUpdate = useCallback(\n    async (row: T, index: number) => {\n      let newRow;\n      if (getItemId(row)) {\n        newRow = await update(row, false);\n      } else {\n        newRow = await save(row, false);\n      }\n\n      updateItem(index, newRow);\n\n      if (!alwaysEditing) {\n        setReadonly(index);\n      }\n    },\n    [getItemId, updateItem, alwaysEditing, update, save, setReadonly],\n  );\n\n  return {\n    ...rest,\n    query,\n    fetch,\n    sortWith,\n    reload,\n    reset,\n    searchParams,\n    sorts,\n    isLoading,\n    isError,\n    remove: asyncRemove,\n    save: asyncUpdate,\n    idPropertyName: keyName,\n    setReadonly,\n  };\n}\n"],"sourceRoot":""}