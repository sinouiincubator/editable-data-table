{"version":3,"sources":["D:/workspaces/editable-data-table/src/Table.tsx","D:/workspaces/editable-data-table/src/EmptyDataTableRow.tsx","D:/workspaces/editable-data-table/src/DataTableColGroup.tsx","D:/workspaces/editable-data-table/src/DataTableHead.tsx","D:/workspaces/editable-data-table/src/DataTableBodyRow.tsx","D:/workspaces/editable-data-table/src/DataTableBody.tsx","D:/workspaces/editable-data-table/src/EditableDataTable.tsx","D:/workspaces/editable-data-table/src/DataTableCellEditor.tsx","D:/workspaces/editable-data-table/src/DataTableBodyCell.tsx","D:/workspaces/editable-data-table/src/DataTableHeadCell.tsx","D:/workspaces/editable-data-table/src/TableColumn.tsx","D:/workspaces/editable-data-table/src/shared/DataTableRowContext.ts","D:/workspaces/editable-data-table/src/shared/EditableDataTableContext.ts","D:/workspaces/editable-data-table/src/shared/EditingBodyRowContainer.ts","D:/workspaces/editable-data-table/src/shared/constants.ts","D:/workspaces/editable-data-table/src/useEditingList.ts","D:/workspaces/editable-data-table/src/useSimpleEditingList.ts"],"names":["captionTypeStyle","css","_templateObject","props","theme","typography","body1","fontSize","fontFamily","fontWeightMedium","color","bodyTypeStyle","_templateObject2","fontWeight","dataTableCellStyle","_templateObject3","palette","type","rowBgColor","light","tableRowSelected","tableRowHover","dark","StyledTable","styled","Table","_templateObject4","primary","caption","Wrapper","div","EmptyDataTableRow_templateObject","EmptyDataTableRow","children","react_default","a","createElement","className","data-testid","context","RowType","ColGroup","DataTableColGroup","DataTableRowContext","Provider","value","DataTableHead","_ref","React","memo","data","index","editing","error","touched","useMemo","Body","EditingBodyRowContainer","DataTableBody","idPropertyName","_ref$editingRows","editingRows","errors","length","map","item","src_DataTableBodyRow","key","concat","undefined","EditableDataTable","_props$data","_props$idPropertyName","_props$emptyTitle","emptyTitle","style","_ref$idPropertyName","onRowChange","validate","onFieldChange","options","useRef","useEffect","current","useEditableDataTable","Fragment","src_Table","classNames","EditableDataTableContext","src_DataTableColGroup","src_DataTableHead","src_DataTableBody","src_EmptyDataTableRow","name","Editor","editor","useContext","valueFromContext","_useState","useState","setValue","Object","slicedToArray","_EditingBodyRowContai","useContainer","validateField","errorControlled","handleChange","useCallback","event","newValue","target","isChangeEvent","onChange","FormHelpText","MemoDataTableBodyCellInner","order","render","Error","src_DataTableCellEditor","DataTableBodyCell","state","assign","DataTableHeadCell","title","align_center","TableColumn","width","Head","src_DataTableHeadCell","src_DataTableBodyCell","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_constants__WEBPACK_IMPORTED_MODULE_1__","createContext","createContainer","rowData","outerError","outTouched","_useState2","D_workspaces_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setTouched","_useState3","_useState4","setErrors","rowDataRef","_useContext","updateErrors","newErrors","prev","shallowEqual","newRowData","arguments","updateTouched","result","newTouched","keys","forEach","filter","fieldName","D_workspaces_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","D_workspaces_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","d","__webpack_exports__","useEditingList","url","defaultValue","_ref$keyName","keyName","_useRestListApi","useRestListApi","items","setItems","remove","removeItemAt","update","save","isLoading","addItem","rest","D_workspaces_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_4__","D_workspaces_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","setEditingRows","itemsCount","Array","fill","asyncRemove","_ref2","D_workspaces_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","D_workspaces_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","row","wrap","_context","next","produce","draft","splice","t0","stop","_x","_x2","apply","this","asyncUpdate","_ref3","_callee2","_context2","sent","_x3","_x4","edit","D_workspaces_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","add","addAt","push","useSimpleEditingList","defaultItems","D_workspaces_editable_data_table_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","alwaysEditing","_useState5","_useState6","_useState7","_useState8","optionsRef","rowIndex","setReadonly","replaceItems","newItems","removeByIndex","removeItems","indexes","removeByIndexes","array","_","indexOf","updateItem","rowErrors","validateAllEditingRows","_item","fieldError","fieldTouched","field","every"],"mappings":"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","file":"static/js/docs-index~docs-pagination-editable-table~docs-pagination-show-editable-data-table~docs-validate.a05b08f5.js","sourcesContent":["import styled, { css } from 'sinoui-components/styles';\nimport Table from 'sinoui-components/Table';\n\nconst captionTypeStyle = css`\n  font-size: ${(props) => props.theme.typography.body1.fontSize}rem;\n  font-family: ${(props) => props.theme.typography.fontFamily};\n  font-weight: ${(props) => props.theme.typography.fontWeightMedium};\n  color: ${(props) => props.theme.typography.body1.color};\n`;\n\nconst bodyTypeStyle = css`\n  font-size: ${(props) => props.theme.typography.body1.fontSize}rem;\n  font-family: ${(props) => props.theme.typography.fontFamily};\n  font-weight: ${(props) => props.theme.typography.body1.fontWeight};\n  color: ${(props) => props.theme.typography.body1.color};\n`;\n\nconst dataTableCellStyle = css`\n  padding: 0;\n  padding-left: 8px;\n  padding-right: 8px;\n  border-bottom: 1px solid\n    ${(props) =>\n      props.theme.palette.type === 'light'\n        ? 'rgba(224, 224, 224, 1)'\n        : 'rgba(80, 80, 80, 1)'};\n`;\n\nconst rowBgColor = {\n  light: {\n    tableRowSelected: 'rgba(0, 0, 0, 0.04)', // 表格行选中时的背景色\n    tableRowHover: 'rgba(0, 0, 0, 0.07)', // 表格行hover时的背景色\n  },\n  dark: {\n    tableRowSelected: 'rgba(255, 255, 255, 0.08)', // 表格行选中时的背景色\n    tableRowHover: 'rgba(255, 255, 255, 0.14)', // 表格行hover时的背景色\n  },\n};\n\nconst StyledTable = styled(Table)`\n  table-layout: fixed;\n  border-top: 1px solid rgba(224, 224, 224, 1);\n  & .sinoui-data-table-head {\n    ${captionTypeStyle};\n    ${dataTableCellStyle};\n    background-color: ${(props) =>\n      props.theme.palette.type === 'light'\n        ? props.theme.palette.primary[50]\n        : props.theme.palette.primary[200]};\n    text-align: left;\n    vertical-align: middle;\n  }\n\n  .sinoui-checkbox-button {\n    margin: 14px;\n  }\n\n  & .sinoui-data-table-head.numeric,\n  .sinoui-data-table-body-td.numeric {\n    text-align: right;\n    flex-direction: row-reverse;\n  }\n\n  & .sinoui-data-table-head.align_center,\n  .sinoui-data-table-body-td.align_center {\n    text-align: center;\n  }\n\n  & .sinoui-data-table-head.checkbox,\n  .sinoui-data-table-body-td.checkbox {\n    padding: 0;\n    width: 48px;\n  }\n\n  & .sinoui-data-table-head.extraInfo,\n  .sinoui-data-table-body-td.extraInfo {\n    padding: 0;\n    width: 60px;\n  }\n\n  & .sinoui-data-table-head:last-child,\n  .sinoui-data-table-body-td:last-child {\n    padding-right: 24px;\n  }\n\n  & .sinoui-data-table-footer {\n    ${captionTypeStyle};\n    ${dataTableCellStyle};\n    padding-left: 24px;\n    padding-right: 12px;\n  }\n\n  & .sinoui-data-table-body-cell-no-data {\n    ${bodyTypeStyle};\n    ${dataTableCellStyle};\n    padding: 64px;\n    text-align: center;\n    color: ${(props) => props.theme.typography.caption.color};\n  }\n\n  & .sinoui-data-table-body-td {\n    ${bodyTypeStyle};\n    ${dataTableCellStyle};\n    text-align: left;\n    vertical-align: middle;\n    word-wrap: break-word;\n    word-break: break-all;\n  }\n\n  & .sinoui-data-table-head-row {\n    height: 48px;\n  }\n\n  & .sinoui-data-table-footer-row,\n  .sinoui-data-table-body-row-no-data {\n    height: 56px;\n    background-color: transparent;\n  }\n\n  & .sinoui-data-table-body-row {\n    height: 48px;\n    background-color: transparent;\n\n    &:hover {\n      background-color: ${(props) =>\n        rowBgColor[props.theme.palette.type].tableRowHover};\n    }\n  }\n\n  & .sinoui-data-table-body-row.selected {\n    background-color: ${(props) =>\n      rowBgColor[props.theme.palette.type].tableRowSelected};\n  }\n`;\n\nexport default StyledTable;\n","import React from 'react';\nimport styled from 'sinoui-components/styles';\n\nconst Wrapper = styled.div`\n  text-align: center;\n  padding: 32px 8px;\n`;\n\n/**\n * 表格空数据时显示的行\n */\nconst EmptyDataTableRow: React.SFC = (props) => {\n  const { children } = props;\n  return (\n    <Wrapper className=\"sinoui-data-table-info\" data-testid=\"emptyInfo\">\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default EmptyDataTableRow;\n","import React from 'react';\nimport { RowType } from './shared/constants';\nimport DataTableRowContext from './shared/DataTableRowContext';\n\nconst context: { type: RowType.ColGroup } = {\n  type: RowType.ColGroup,\n};\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction DataTableColGroup(props: Props) {\n  const { children } = props;\n  return (\n    <DataTableRowContext.Provider value={context}>\n      <colgroup data-testid=\"colgroup\">{children}</colgroup>\n    </DataTableRowContext.Provider>\n  );\n}\n\nexport default DataTableColGroup;\n","import React from 'react';\n\n/**\n * 数据表头\n */\nconst DataTableHead: React.SFC = function TableHead({ children }) {\n  return (\n    <thead>\n      <tr className=\"sinoui-data-table-head-row\" data-testid=\"tableHead\">\n        {children}\n      </tr>\n    </thead>\n  );\n};\n\nexport default DataTableHead;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useMemo } from 'react';\nimport { RowType } from './shared/constants';\nimport DataTableRowContext, {\n  BodyRowContextType,\n} from './shared/DataTableRowContext';\nimport EditingBodyRowContainer from './shared/EditingBodyRowContainer';\n\ninterface Props<T> {\n  /**\n   * 此行数据\n   */\n  data: T;\n  /**\n   * 数据序号\n   */\n  index: number;\n  /**\n   * 单元格子组件\n   */\n  children: React.ReactNode;\n\n  /**\n   * 是否处于编辑状态\n   */\n  editing?: boolean;\n\n  /**\n   * 行数据错误状态\n   */\n  error?: ErrorResult;\n\n  /**\n   * 单元格编辑器是否被点击过\n   */\n  touched?: TouchedState;\n}\n\ntype CompType<T = any> = React.SFC<Props<T>>;\n\n/**\n * 内容行\n */\nconst DataTableBodyRow: CompType = (props) => {\n  const { data, index, children, editing, error, touched } = props;\n  const context: BodyRowContextType<any> = useMemo(\n    () => ({\n      type: RowType.Body,\n      data,\n      index,\n      editing: !!editing,\n      error,\n      touched,\n    }),\n    [data, index, editing, error, touched],\n  );\n\n  return (\n    <DataTableRowContext.Provider value={context}>\n      <EditingBodyRowContainer.Provider>\n        <tr className=\"sinoui-data-table-body-row\" data-testid=\"bodyRow\">\n          {children}\n        </tr>\n      </EditingBodyRowContainer.Provider>\n    </DataTableRowContext.Provider>\n  );\n};\n\nexport default React.memo(DataTableBodyRow);\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport DataTableBodyRow from './DataTableBodyRow';\n\n/**\n * 数据表格内容组件\n */\nconst DataTableBody: React.SFC<{\n  data?: any[];\n  idPropertyName: string;\n  editingRows?: boolean[];\n  errors?: ErrorResult[];\n  touched?: TouchedState[];\n}> = function DataTableBody({\n  idPropertyName,\n  data,\n  children,\n  editingRows = [],\n  errors,\n  touched,\n}) {\n  if (!data || data.length === 0) {\n    return null;\n  }\n  return (\n    <tbody>\n      {data.map((item, index) => (\n        <DataTableBodyRow\n          key={item[idPropertyName] || `index_${index}`}\n          data={item}\n          index={index}\n          data-testid=\"tableBody\"\n          editing={editingRows[index]}\n          error={errors ? errors[index] : undefined}\n          touched={touched ? touched[index] : undefined}\n        >\n          {children}\n        </DataTableBodyRow>\n      ))}\n    </tbody>\n  );\n};\n\nexport default DataTableBody;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useMemo, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Table from './Table';\nimport EditableDataTableContext from './shared/EditableDataTableContext';\nimport EmptyDataTableRow from './EmptyDataTableRow';\nimport DataTableColGroup from './DataTableColGroup';\nimport DataTableHead from './DataTableHead';\nimport DataTableBody from './DataTableBody';\n\nexport interface Props<T> {\n  /**\n   * 列表数据\n   */\n  data?: T[];\n  /**\n   * 处于编辑状态的行。`editingRows`数组需要与`data`数组保持一一对应的关系，`editingRows`数组中每一个数据项代表的是`data`数组中对应数据项的编辑状态，`true`表示编辑状态，`false`表示非编辑状态。\n   */\n  editingRows?: boolean[];\n\n  /**\n   * 给table元素添加className\n   */\n  className?: string;\n\n  /**\n   * 给table元素添加样式\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * 错误状态\n   */\n  errors?: ErrorResult[];\n\n  /**\n   * 单元格是否被点击的状态\n   */\n  touched?: TouchedState[];\n\n  /**\n   * 子节点，一组TableColumn。使用TableColumn指表格列信息。\n   */\n  children: React.ReactNode;\n  /**\n   * 数据的id属性名。默认为'id'。\n   */\n  idPropertyName?: string;\n  /**\n   * 无数据时的提示信息。默认为“暂无数据”。\n   */\n  emptyTitle?: React.ReactNode;\n\n  /**\n   * 监听行数据发生变化的事件。回调函数的`rowData`参数代表的是变更后的行数据对象。\n   */\n  onRowChange?: (index: number, rowData: T) => void;\n\n  /**\n   * 监听单元格值变化事件。回调函数的`rowData`参数代表的是变更后的行数据对象。\n   */\n  onFieldChange?: (index: number, fieldName: string, rowData: T) => void;\n\n  /**\n   * 给正在编辑的行添加校验规则。\n   * \n   * 返回错误提示：\n   * \n   * ```js\n     {\n       'title': '不能为空',\n       'name': '不能少于三个字'\n     }\n   * ```\n   *\n   * 上面的错误信息表示字段`title`和`name`校验失败。\n   * \n   * 如果数据行没有错误，则返回`{}`或者`undefined`。\n   */\n  validate?: (rowData: T) => { [x: string]: string } | undefined;\n}\n\nfunction useEditableDataTable<T>({\n  idPropertyName = 'id',\n  onRowChange,\n  validate,\n  onFieldChange,\n}: Props<T>) {\n  const options = useRef({\n    onRowChange,\n    validate,\n    onFieldChange,\n  });\n\n  useEffect(() => {\n    options.current.onRowChange = onRowChange;\n    options.current.validate = validate;\n    options.current.onFieldChange = onFieldChange;\n  }, [onRowChange, validate, onFieldChange]);\n\n  const context = useMemo(\n    () => ({ idPropertyName, options: options.current }),\n    [idPropertyName],\n  );\n\n  return context;\n}\n\n/**\n * 可编辑表格\n */\nfunction EditableDataTable<T>(props: Props<T>) {\n  const {\n    data = [],\n    idPropertyName = 'id',\n    children,\n    emptyTitle = '暂无数据',\n    editingRows,\n    errors,\n    touched,\n    className,\n    style,\n  } = props;\n  const context = useEditableDataTable(props);\n  return (\n    <>\n      <Table\n        className={classNames('sinoui-editable-data-table', className)}\n        style={style}\n      >\n        <EditableDataTableContext.Provider value={context}>\n          <DataTableColGroup>{children}</DataTableColGroup>\n          <DataTableHead>{children}</DataTableHead>\n          <DataTableBody\n            data={data}\n            idPropertyName={idPropertyName}\n            editingRows={editingRows}\n            errors={errors}\n            touched={touched}\n          >\n            {children}\n          </DataTableBody>\n        </EditableDataTableContext.Provider>\n      </Table>\n      {(!data || data.length === 0) && (\n        <EmptyDataTableRow>{emptyTitle}</EmptyDataTableRow>\n      )}\n    </>\n  );\n}\n\nexport default EditableDataTable;\n","import React, { useState, useContext, useCallback, useMemo } from 'react';\nimport FormHelpText from 'sinoui-components/Form/FormHelpText';\nimport DataTableRowContext, {\n  BodyRowContextType,\n} from './shared/DataTableRowContext';\nimport EditableDataTableContext from './shared/EditableDataTableContext';\nimport EditingBodyRowContainer from './shared/EditingBodyRowContainer';\n\ninterface Props {\n  editor: React.ReactType;\n  name: string;\n}\n\nfunction isChangeEvent(\n  event?: React.ChangeEvent<HTMLInputElement> | string,\n): event is React.ChangeEvent<HTMLInputElement> {\n  return !!(event && (event as React.ChangeEvent<HTMLInputElement>).target);\n}\n\n/**\n * 单元格编辑器\n */\nfunction DataTableCellEditor(props: Props) {\n  const { name, editor: Editor } = props;\n  const { data, index } = useContext(DataTableRowContext) as BodyRowContextType<\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    any\n  >;\n  const valueFromContext = data[name] || '';\n  const [, setValue] = useState(valueFromContext);\n  const { options } = useContext(EditableDataTableContext);\n  const {\n    touched,\n    errors,\n    validateField,\n    errorControlled,\n  } = EditingBodyRowContainer.useContainer();\n\n  const handleChange = useCallback(\n    (event?: React.ChangeEvent<HTMLInputElement> | string) => {\n      const newValue = isChangeEvent(event) ? event.target.value : event;\n      setValue(newValue);\n\n      data[name] = newValue;\n\n      if (options.onRowChange) {\n        options.onRowChange(index, data);\n      }\n\n      if (options.onFieldChange) {\n        options.onFieldChange(index, name, data);\n      }\n\n      if (!errorControlled) {\n        validateField(name, data);\n      }\n    },\n    [data, name, options, index, errorControlled, validateField],\n  );\n\n  const isTouched = touched[name];\n  const error = isTouched ? errors[name] : undefined;\n\n  const element = useMemo(\n    () => (\n      <>\n        <Editor\n          name={name}\n          value={valueFromContext}\n          item={data}\n          onChange={handleChange}\n          error={!!error}\n        />\n        {error && (\n          <FormHelpText\n            error\n            className=\"sinoui-editable-data-table-editor-error\"\n          >\n            {error}\n          </FormHelpText>\n        )}\n      </>\n    ),\n    [data, error, handleChange, name, valueFromContext],\n  );\n\n  return element;\n}\n\nexport default React.memo(DataTableCellEditor);\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useContext } from 'react';\nimport EditableDataTableContext from './shared/EditableDataTableContext';\nimport DataTableRowContext, {\n  BodyRowContextType,\n} from './shared/DataTableRowContext';\nimport DataTableCellEditor from './DataTableCellEditor';\nimport EditingBodyRowContainer from './shared/EditingBodyRowContainer';\n\ninterface CellState<T> {\n  data: T;\n  index: number;\n  editing: boolean;\n  errors?: { [x: string]: any };\n  validate: (rowData?: T) => boolean;\n  idPropertyName: string;\n}\n\ninterface DataCellProps<T, CellDataType> {\n  /**\n   * 是否显示序号\n   */\n  order?: boolean;\n  /**\n   * 渲染单元格\n   */\n  render?: (\n    value: CellDataType,\n    row: T,\n    index: number,\n    id: string,\n    context: {\n      editing: boolean;\n      validate: (rowData?: any) => boolean;\n    },\n  ) => React.ReactNode;\n  /**\n   * 数据列名称\n   */\n  name?: string;\n\n  /**\n   * 编辑器\n   */\n  editor?: React.ReactType;\n}\n\nfunction useCellState<T>(): CellState<T> {\n  const { data, index, editing } = useContext(\n    DataTableRowContext,\n  ) as BodyRowContextType<any>;\n  const { validate } = EditingBodyRowContainer.useContainer();\n  const { idPropertyName } = useContext(EditableDataTableContext);\n\n  return {\n    data,\n    index,\n    editing,\n    idPropertyName,\n    validate,\n  };\n}\n\n/**\n * 数据单元格\n */\nfunction DataTableBodyCellInner(\n  props: DataCellProps<any, any> & CellState<any>,\n) {\n  const {\n    order,\n    render,\n    name,\n    editor,\n    index,\n    editing,\n    data,\n    idPropertyName,\n    validate,\n  } = props;\n\n  if (order) {\n    return (\n      <td className=\"sinoui-data-table-body-td align_center\">{index + 1}</td>\n    );\n  }\n\n  if (editing && editor) {\n    if (!name) {\n      throw new Error(`没有给TableColumn指定name属性`);\n    }\n    return (\n      <td className=\"sinoui-data-table-body-td\">\n        <DataTableCellEditor name={name} editor={editor} />\n      </td>\n    );\n  }\n\n  if (render) {\n    return (\n      <td className=\"sinoui-data-table-body-td\">\n        {render(\n          name ? data[name] : undefined,\n          data,\n          index,\n          data[idPropertyName],\n          {\n            editing,\n            validate,\n          },\n        )}\n      </td>\n    );\n  }\n\n  return name ? (\n    <td className=\"sinoui-data-table-body-td\">{data[name]}</td>\n  ) : null;\n}\n\nconst MemoDataTableBodyCellInner = React.memo(DataTableBodyCellInner);\n\nfunction DataTableBodyCell<T = any, CellDataType = string>(\n  props: DataCellProps<T, CellDataType>,\n) {\n  const state = useCellState<any>();\n\n  return <MemoDataTableBodyCellInner {...props} {...state} />;\n}\n\nexport default DataTableBodyCell;\n","import React from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  order?: boolean;\n  title?: React.ReactNode;\n}\n\n/**\n * 表格头单元格\n */\nfunction DataTableHeadCell(props: Props) {\n  const { order, title } = props;\n  return (\n    <th\n      className={classNames('sinoui-data-table-head', {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        align_center: order,\n      })}\n    >\n      {title}\n    </th>\n  );\n}\n\nexport default DataTableHeadCell;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useContext } from 'react';\nimport DataTableRowContext from './shared/DataTableRowContext';\nimport DataTableBodyCell from './DataTableBodyCell';\nimport DataTableHeadCell from './DataTableHeadCell';\nimport { RowType } from './shared/constants';\n\nexport interface Props<T, CellDataType> {\n  /**\n   * 数据列名称\n   */\n  name?: string;\n  /**\n   * 标题\n   */\n  title?: React.ReactNode;\n\n  /**\n   * 是否显示序号\n   */\n  order?: boolean;\n\n  /**\n   * 渲染单元格\n   */\n  render?: (\n    value: CellDataType,\n    row: T,\n    index: number,\n    id: string,\n    context: {\n      editing: boolean;\n      validate: (rowData?: any) => boolean;\n    },\n  ) => React.ReactNode;\n\n  /**\n   * 列宽度\n   */\n  width?: number | string;\n\n  /**\n   * 编辑器\n   */\n  editor?: React.ReactType;\n}\n\n/**\n * 表格列\n */\nconst TableColumn: React.SFC<Props<any, any>> = React.memo(function TableColumn<\n  T,\n  CellDataType\n>(props: Props<T, CellDataType>) {\n  const { title, order, width } = props;\n  const { type } = useContext(DataTableRowContext);\n\n  switch (type) {\n    case RowType.Head:\n      return <DataTableHeadCell title={title} order={order} />;\n    case RowType.ColGroup:\n      return <col width={order ? 50 : width} />;\n    default:\n      return <DataTableBodyCell {...props} />;\n  }\n});\n\nexport default TableColumn;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport { RowType } from './constants';\n\nexport interface BodyRowContextType<T> {\n  type: RowType.Body;\n  data: T;\n  index: number;\n  /**\n   * 是否处于编辑状态\n   */\n  editing: boolean;\n\n  /**\n   * 数据行的验证结果\n   */\n  error?: ErrorResult;\n\n  /**\n   * 单元格数据被点击状态\n   */\n  touched?: TouchedState;\n}\n\nexport interface HeadRowContextType {\n  type: RowType.Head;\n}\n\nexport interface ColGroupContextType {\n  type: RowType.ColGroup;\n}\n\nexport type RowContextType<T = any> =\n  | BodyRowContextType<T>\n  | HeadRowContextType\n  | ColGroupContextType;\n\nconst DataTableRowContext = React.createContext<RowContextType>({\n  type: RowType.Head,\n});\n\nexport default DataTableRowContext;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\n\ninterface ContextType {\n  idPropertyName: string;\n  options: {\n    onRowChange?: (index: number, rowData: any) => void;\n    onFieldChange?: (index: number, fieldName: string, rowData: any) => void;\n    validate?: (rowData: any) => { [x: string]: string } | undefined;\n  };\n}\n\nconst EditableDataTableContext = React.createContext<ContextType>({\n  idPropertyName: 'id',\n  options: {},\n});\n\nexport default EditableDataTableContext;\n","import { useState, useCallback, useRef, useEffect, useContext } from 'react';\nimport { createContainer } from 'unstated-next';\nimport shallowEqual from 'shallowequal';\nimport EditableDataTableContext from './EditableDataTableContext';\nimport DataTableRowContext, { BodyRowContextType } from './DataTableRowContext';\n\ninterface ContextType<T> {\n  /**\n   * 校验错误信息\n   */\n  errors: {\n    [x: string]: string;\n  };\n\n  /**\n   * 表单校验状态是否是受控于外部。（也就是使用者处理数据行校验）\n   */\n  errorControlled: boolean;\n\n  /**\n   * 点击状态\n   */\n  touched: {\n    [x: string]: boolean;\n  };\n\n  /**\n   * 校验数据行\n   *\n   * 如果通过校验，则返回`true`，否则返回`false`。\n   */\n  validate: (newItem?: T) => boolean;\n\n  /**\n   * 校验表单域\n   */\n  validateField: (fieldName: string, newRowData: T) => void;\n}\n\n/**\n * 用于正在编辑的行数据的状态管理hook\n *\n * 主要维护的状态：\n *\n * * 表单校验\n * * 是否点击过的状态\n *\n */\nfunction useEditingBodyRow<T>(): ContextType<T> {\n  const { data: rowData, error: outerError, touched: outTouched } = useContext(\n    DataTableRowContext,\n  ) as BodyRowContextType<T>;\n  const [touched, setTouched] = useState<{ [x: string]: boolean }>({});\n  const [errors, setErrors] = useState({});\n  const rowDataRef = useRef(rowData);\n  const { options, idPropertyName } = useContext(EditableDataTableContext);\n\n  useEffect(() => {\n    rowDataRef.current = rowData;\n  }, [rowData]);\n\n  const updateErrors = useCallback((newErrors: any) => {\n    setErrors((prev) => {\n      if (!shallowEqual(newErrors, prev)) {\n        return newErrors;\n      }\n      return prev;\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!(rowData as any)[idPropertyName] && options.validate) {\n      const newErrors = options.validate(rowData) || {};\n      updateErrors(newErrors);\n    }\n  }, [rowData, options, idPropertyName, updateErrors]);\n\n  const validate = useCallback(\n    (newRowData: T = rowDataRef.current, updateTouched: boolean = true) => {\n      if (options.validate) {\n        const result = options.validate(newRowData);\n        if (result) {\n          if (updateTouched) {\n            const newTouched: { [x: string]: boolean } = {};\n            Object.keys(result).forEach((key) => {\n              newTouched[key] = true;\n            });\n\n            setTouched(newTouched);\n          }\n\n          updateErrors(result || {});\n\n          return (\n            Object.keys(result).filter((key) => !!result[key]).length === 0\n          );\n        }\n      }\n\n      return true;\n    },\n    [options, updateErrors],\n  );\n\n  const validateField = useCallback(\n    (fieldName: string, newRowData: T) => {\n      setTouched((prev) => {\n        if (!prev[fieldName]) {\n          return { ...prev, [fieldName]: true };\n        }\n        return prev;\n      });\n      validate(newRowData, false);\n    },\n    [validate],\n  );\n\n  return {\n    errors: outerError || errors,\n    errorControlled: !!outerError,\n    touched: outTouched || touched,\n    validate,\n    validateField,\n  };\n}\n\nconst EditingBodyRowContainer = createContainer(useEditingBodyRow);\n\nexport default EditingBodyRowContainer;\n","export enum RowType {\n  Body,\n  Head,\n  ColGroup,\n}\n\nexport const EMPTY_ROW_INFO = '暂无数据';\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport useRestListApi, { Options } from '@sinoui/use-rest-list-api';\nimport { useState, useEffect, useCallback } from 'react';\nimport { produce } from 'immer';\n\n/**\n * 维护可编辑列表的hook\n */\nexport default function useEditingList<T>(\n  url: string,\n  defaultValue: T[] = [],\n  options?: Options<T>,\n) {\n  const { keyName = 'id' } = options || {};\n  const {\n    items,\n    setItems,\n    remove,\n    removeItemAt,\n    update,\n    save,\n    isLoading,\n    addItem,\n    ...rest\n  } = useRestListApi<T>(url, defaultValue);\n  const [editingRows, setEditingRows] = useState(() =>\n    defaultValue.map(() => false),\n  );\n\n  const itemsCount = items.length;\n  useEffect(() => {\n    setEditingRows((prev) => {\n      if (itemsCount !== prev.length) {\n        return new Array(itemsCount).fill(false);\n      }\n      return prev;\n    });\n  }, [isLoading, itemsCount]);\n\n  const add = (item: Partial<T> = {}, index: number = -1) => {\n    const addAt = produce(<V>(draft: V[], value: V) => {\n      if (index === -1 || index >= draft.length) {\n        draft.push(value);\n      } else {\n        draft.splice(index, 0, value);\n      }\n    });\n\n    setItems(addAt(items, item));\n\n    setEditingRows(addAt(editingRows, true));\n  };\n\n  const asyncRemove = useCallback(\n    async (row: T, index: number) => {\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((row as any)[keyName]) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          await remove((row as any)[keyName]);\n          setEditingRows(\n            produce(editingRows, (draft) => {\n              draft.splice(index, 1);\n            }),\n          );\n        } else {\n          removeItemAt(index);\n          setEditingRows(\n            produce((draft) => {\n              draft.splice(index, 1);\n            }),\n          );\n        }\n      } catch (error) {\n        throw error;\n      }\n    },\n    [editingRows, keyName, remove, removeItemAt],\n  );\n\n  const asyncUpdate = useCallback(\n    async (row: T, index: number) => {\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((row as any)[keyName]) {\n          await update(row);\n        } else {\n          const result = await save(row, false);\n          removeItemAt(index);\n          addItem(result, index);\n        }\n\n        setEditingRows(\n          produce(editingRows, (draft) => {\n            draft[index] = false;\n          }),\n        );\n      } catch (error) {\n        throw error;\n      }\n    },\n    [addItem, editingRows, keyName, removeItemAt, save, update],\n  );\n\n  const edit = useCallback(\n    (index: number) => {\n      setEditingRows(\n        produce(editingRows, (draft) => {\n          draft[index] = true;\n        }),\n      );\n    },\n    [editingRows],\n  );\n\n  return {\n    ...rest,\n    items,\n    editingRows,\n    add,\n    remove: asyncRemove,\n    edit,\n    save: asyncUpdate,\n    idPropertyName: keyName,\n  };\n}\n","import { useRef, useEffect, useState, useCallback } from 'react';\nimport { produce } from 'immer';\nimport shallowEqual from 'shallowequal';\n\ninterface Options<T> {\n  /**\n   * 单元格表单域是否一直处于编辑状态。\n   */\n  alwaysEditing?: boolean;\n\n  /**\n   * 验证行数据的函数\n   */\n  validate?: (item: T) => ErrorResult | undefined;\n}\n\n/**\n * 可编辑列表外置状态管理hook\n *\n * 支持：\n *\n * * 列表数据管理\n * * 可编辑状态维护\n * * 单元格编辑器校验\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useSimpleEditingList<T = any>(\n  defaultItems: T[] = [],\n  options: Options<T> = {},\n): SimpleEditingListResult<T> {\n  const [items, setItems] = useState<T[]>(defaultItems);\n  const [editingRows, setEditingRows] = useState<boolean[]>(() =>\n    new Array(defaultItems.length).fill(!!options.alwaysEditing),\n  );\n  const [errors, setErrors] = useState<ErrorResult[]>(() =>\n    new Array(defaultItems.length).fill({}),\n  );\n  const [touched, setTouched] = useState<TouchedState[]>(() =>\n    new Array(defaultItems.length).fill({}),\n  );\n  const optionsRef = useRef(options);\n\n  useEffect(() => {\n    optionsRef.current = options;\n  }, [options]);\n\n  /**\n   * 编辑\n   */\n  const edit = useCallback((rowIndex: number) => {\n    setEditingRows(\n      produce((draft) => {\n        draft[rowIndex] = true;\n      }),\n    );\n  }, []);\n\n  /**\n   * 设置为只读状态\n   */\n  const setReadonly = useCallback((rowIndex: number) => {\n    setEditingRows(\n      produce((draft) => {\n        draft[rowIndex] = false;\n      }),\n    );\n  }, []);\n\n  /**\n   * 更换items\n   *\n   * @param {T[]} newItems 新的items\n   */\n  const replaceItems = useCallback((newItems: T[]) => {\n    setItems(newItems);\n    setEditingRows(\n      new Array(newItems.length).fill(!!optionsRef.current.alwaysEditing),\n    );\n\n    setErrors(new Array(newItems.length).fill({}));\n    setTouched(new Array(newItems.length).fill({}));\n  }, []);\n\n  /**\n   * 新增一条数据\n   */\n  const add = useCallback((item: Partial<T> = {}, index: number = -1) => {\n    const addAt = produce(<V>(draft: V[], value: V) => {\n      if (index === -1 || index >= draft.length) {\n        draft.push(value);\n      } else {\n        draft.splice(index, 0, value);\n      }\n    });\n    setItems((prev) => addAt(prev, item));\n\n    setEditingRows((prev) => addAt(prev, true));\n\n    setErrors((prev) => addAt(prev, {}));\n\n    setTouched((prev) => addAt(prev, {}));\n  }, []);\n\n  /**\n   * 删除数据\n   */\n  const remove = useCallback((index: number) => {\n    const removeByIndex = produce((draft) => {\n      draft.splice(index, 1);\n    });\n\n    setItems(removeByIndex);\n    setEditingRows(removeByIndex);\n    setErrors(removeByIndex);\n    setTouched(removeByIndex);\n  }, []);\n\n  /**\n   * 删除一组数据\n   */\n  const removeItems = useCallback((indexes: number[]) => {\n    const removeByIndexes = <T>(array: T[]) =>\n      array.filter((_, index) => indexes.indexOf(index) === -1);\n    setItems(removeByIndexes);\n    setEditingRows(removeByIndexes);\n    setErrors(removeByIndexes);\n    setTouched(removeByIndexes);\n  }, []);\n\n  /**\n   * 更新数据项\n   */\n  const updateItem = useCallback((index: number, item: T) => {\n    setItems(\n      produce((draft) => {\n        draft[index] = item;\n      }),\n    );\n  }, []);\n\n  /**\n   * 验证一个单元格\n   */\n  const validateField = useCallback(\n    (index: number, fieldName: string, rowData: T) => {\n      const { validate } = optionsRef.current;\n\n      if (validate) {\n        const rowErrors = validate(rowData) || {};\n\n        setErrors(\n          produce((draft) => {\n            if (!shallowEqual(draft[index], rowErrors)) {\n              draft[index] = rowErrors;\n            }\n          }),\n        );\n\n        setTouched(\n          produce((draft) => {\n            draft[index][fieldName] = true;\n          }),\n        );\n      }\n    },\n    [],\n  );\n\n  /**\n   * 校验列表中正在编辑的数据\n   */\n  const validateAllEditingRows = () => {\n    const { validate } = optionsRef.current;\n\n    if (!validate) {\n      return true;\n    }\n\n    const updateErrors = produce((draft: ErrorResult[]) => {\n      items\n        .map((item, index) => {\n          if (!editingRows[index]) {\n            return {};\n          }\n          return validate(item) || {};\n        })\n        .forEach((error, index) => {\n          if (!shallowEqual(draft[index], error)) {\n            draft[index] = error;\n          }\n        });\n    });\n\n    const newErrors = updateErrors(errors);\n    setErrors(newErrors);\n    setTouched(\n      produce((draft) => {\n        items.forEach((_item, index) => {\n          if (!editingRows[index]) {\n            return;\n          }\n\n          const fieldError = newErrors[index];\n          const fieldTouched: TouchedState = {};\n\n          Object.keys(fieldError).forEach((field) => {\n            fieldTouched[field] = true;\n          });\n\n          draft[index] = fieldTouched;\n        });\n      }),\n    );\n\n    return (\n      newErrors &&\n      newErrors.every(\n        (error) =>\n          Object.keys(error).filter((key) => !!error[key]).length === 0,\n      )\n    );\n  };\n\n  return {\n    items,\n    setItems: replaceItems,\n    editingRows,\n    edit,\n    setReadonly,\n    add,\n    remove,\n    removeItems,\n    updateItem,\n    errors,\n    touched,\n    validateField,\n    validateAllEditingRows,\n  };\n}\n\nexport default useSimpleEditingList;\n"],"sourceRoot":""}